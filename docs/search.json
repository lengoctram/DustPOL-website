[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "",
    "text": "– This numerical modelling calculates the multi-wavelength polarization degree of absorption and thermal dust emission based on Radiative Torque alignment (RAT-A), Magnetically enhanced RAT (MRAT) and Radiative Torque Disruption (RAT-D).\n– The routine will save the output files (wavelength and degree of polarization) for further analysis. A built-in routine for analysis is also provided.\n– For a quick look and investigation, please use a web-interface GUI: https://dustpol-py.streamlit.app\n– The high-performance-computation techniques are embedded."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Docs.html",
    "href": "Docs.html",
    "title": "Fundamental of DustPOL-py",
    "section": "",
    "text": "The physics of grain alignment by radiative torques is described in detail in numerous works. In this section, we recall the principles of this theory and formulations for our model. For more details, we refer to the most recent reviews in Andersson et al. 2015 and Tram & Hoang 2022, and studies in Lazarian & Hoang 2021 and Hoang et al. 2022.\n\n\nA radiation field is characterized by the following three physical paramters: the radiation spectrum of \\(u_{\\lambda}\\), the mean wavelength of \\(\\bar{\\lambda}\\) and an anisotropy degree of \\(\\gamma\\).\n\n\nThe strength is defined by a dimensionless  \\[\n  U=\\frac{\\int_{0.091\\,\\mu m}^{20\\,\\mu m} u_{\\lambda}d\\lambda}{u_{\\rm ISRF}}, \\label{eq:test}\n\\]  where \\(u_{\\rm ISRF}=8.64\\times 10^{-13}\\,\\rm erg\\,cm^{-3}\\) is the radiation energy density of the interstellar radiation field (ISRF) in the solar neighborhood. For a typical interstellar radiation field, \\(U=1\\).\n\n\n\nThe mean wavelength of this radiation is defined as \\[\\begin{equation}\n  \\bar{\\lambda}=\\frac{\\int_{0.091\\,\\mu m}^{20\\,\\mu m}\\lambda u_{\\lambda}d\\lambda}{\\int_{0.091\\,\\mu m}^{20\\,\\mu m}u_{\\lambda}d\\lambda}\n\\end{equation}\\] with \\(\\bar{\\lambda}=1.3\\,\\mu\\)m for a typical interstellar radiation field.\n\n\n\nIn general, the anisotropic degree of a radiation field falls within \\(0&lt;\\gamma\\leq 1\\). For a typical interstellar radiation field, \\(\\gamma \\simeq 0.1\\), where \\(\\gamma \\simeq 0.3\\) in dense core and \\(\\gamma \\simeq 1\\) in star-forming regions.\n\n\n\n\nThe average radiative torque induced by the interaction of an irregular grain (with an effective size \\(a\\)), and an anisotropic radiation field (with an isotropic degree of \\(\\gamma\\)) is \\[\\begin{equation}\n    \\bar{\\Gamma}_{\\rm RAT} = \\pi a^{2} \\gamma (8.64\\times 10^{-13} U)\\left(\\frac{\\bar{\\lambda}}{2\\pi}\\right)\\bar{Q}_{\\Gamma}\n\\end{equation}\\] where \\(\\bar{Q}_{\\Gamma}\\) is the RAT efficiency, which is \\[\\begin{equation}\n    \\bar{Q}_{\\Gamma}=\\left\\{\n    \\begin{array}{l l}\n        2\\left(\\frac{\\bar{\\lambda}}{a}\\right)^{-2.7}   & \\quad \\text{for } a\\leq \\frac{\\bar{\\lambda}}{1.8},\\\\\n        0.4  & \\quad \\text{for } a&gt;\\frac{\\bar{\\lambda}}{1.8}\n    \\end{array}\\right.\n\\end{equation}\\]\n\n\n\nThe RAT accelerates the irregular grain to a finite angular velocity (\\(\\omega_{\\rm RAT}\\)). For a given RAT, this rotation is faster for a lower initial momentum (\\(I_{a}\\)), and experiences deceleration due to gas collisions and reemission from the grain, characterised by the damping timescale (\\(\\tau_{\\rm damp}\\)). The maximum angular velocity with which an irregular grain is gained by RAT is \\[\\begin{equation}\n    \\omega_{\\rm RAT} = \\frac{\\bar{\\Gamma}_{\\rm RAT}\\tau_{\\rm damp}}{I_{a}}\n\\end{equation}\\] The initial momentum of a grain of size \\(a\\) is \\(I_{a}=8\\pi\\rho a^{5}/15\\) with \\(\\rho\\) is the mass density. The damping time scale is \\[\\begin{equation}\n    \\begin{split}\n        \\tau_{\\rm damp} \\simeq 8.3\\times 10^{3}&\\left(\\frac{a}{0.1\\,\\rm \\mu m}\\right)\\left(\\frac{\\rho}{3\\,\\rm g\\,cm^{-3}}\\right) \\\\\n        &\\times \\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2} \\left(\\frac{1}{1+F_{\\rm IR}}\\right) ~~~ {(\\rm yr)}\n    \\end{split}\n\\end{equation}\\] with \\(F_{\\rm IR}\\) is the ratio in timescale between the gas collision and the re-emission damping, which approximates \\[\\begin{equation}\n    F_{\\rm IR} = 0.038\\times U^{2/3}\\left(\\frac{0.1\\,\\rm \\mu m}{a}\\right)\\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2}\n\\end{equation}\\]\nThe alignment of the grain is withstand if its angular velocity is three times higher than the thermal angular velocity (\\((k_{\\rm B}T_{\\rm gas}/I_{a})^{1/2}\\)). Therefore, the minimum grain size that is aligned (referred to as the alignment size \\(a_{\\rm align}\\)) is the solution of the relation \\[\\begin{equation}\n    \\omega_{\\rm RAT}(a_{\\rm align}) = 3\\times \\left(\\frac{15k_{\\rm B}T_{\\rm gas}}{8\\pi \\rho a_{\\rm align}^{5}}\\right)^{1/2}\n\\end{equation}\\]\n\n\n\nDust grain alignment can be characterised by two separate mechanisms: internal alignment (where the grain’s minor axis aligns with its angular momentum) and external alignment (where the angular momentum aligns with a preferred axis, which could be the ambient magnetic field, radiation field, gas flow).\nThe efficiency of internal alignment is qualitatively characterised by \\(Q_{\\rm X}\\), while it is \\(Q_{J}\\) for external alignment. The net grain alignment is called the Rayleigh reduction factor of \\(R(a)=\\langle Q_{X}Q_{J}\\rangle \\simeq f_{\\rm high-J}\\). The alignment efficiency will change from 0 to \\(f_{\\rm high-J}\\) for grain size from smaller to larger than \\(a_{\\rm align}\\). As this transition is a step-function and differs from the smooth change seen from numerical models, a smooth transition will be \\[\\begin{equation}\n    f(a) = f_{\\rm max}\\left[1-e^{-(0.5a/a_{\\rm align})^{3}} \\right]\n\\end{equation}\\] this is called the alignment function with \\(f_{\\rm max}=1\\) for perfect alignment."
  },
  {
    "objectID": "index.html#dustpol-py---numerical-modelling---v1.5",
    "href": "index.html#dustpol-py---numerical-modelling---v1.5",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "",
    "text": "– This numerical modelling calculates the multi-wavelength polarization degree of absorption and thermal dust emission based on Radiative Torque alignment (RAT-A), Magnetically enhanced RAT (MRAT) and Radiative Torque Disruption (RAT-D).\n– The routine will save the output files (wavelength and degree of polarization) for further analysis. A built-in routine for analysis is also provided.\n– For a quick look and investigation, please use a web-interface GUI: https://dustpol-py.streamlit.app\n– The high-performance-computation techniques are embedded."
  },
  {
    "objectID": "index.html#authors",
    "href": "index.html#authors",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "2 Authors",
    "text": "2 Authors\nLe Ngoc Tram, Hyeseung Lee, and Thiem Hoang"
  },
  {
    "objectID": "index.html#features",
    "href": "index.html#features",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "4 Features",
    "text": "4 Features\n– Current version is designed to predict the polarization spectrum for starlight and thermal\n– diffuse ISM\n– molecular clouds and star-forming regions\n– isolated dense cores (starless cores)"
  },
  {
    "objectID": "index.html#upnext",
    "href": "index.html#upnext",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "5 Upnext",
    "text": "5 Upnext\n– Globules/Pillars\n– Protostars\n– Protoplanetary disks"
  },
  {
    "objectID": "index.html#history",
    "href": "index.html#history",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "6 History:",
    "text": "6 History:\n2024 : Tram added the modulation for starless core and embedded high-performance-computation techniques\n2024 : Tram re-structured the DustPOL-py infractructure to python class object (modulation)\n2024 : Tram implemented a two-phase model: cold and warm dust layers along the LOS\n2023 : Tram optimized and improved the code to work with maximum grain size lower than the disruption size\n2022 : Thiem implemented MRAT in align.py to account for iron inclusions\n2020 : Tram improved Hyeseung’s code\n2019 : Hyeseung modified the Dustpol Code from Thiem, adding RATD (maximum grain size is higher than the disruption size)"
  },
  {
    "objectID": "index.html#dependencies",
    "href": "index.html#dependencies",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "7 Dependencies",
    "text": "7 Dependencies\n1- Python 3\n2- Numpy\n3- Matplotlib\n4- Scipy\n5- Astropy\n6- Joblib for parallelization (installation: https://joblib.readthedocs.io/en/latest/installing.html)\n7- Concurrency for parallelization"
  },
  {
    "objectID": "index.html#bugs",
    "href": "index.html#bugs",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "8 Bugs",
    "text": "8 Bugs\nPlease reach out to us at nle@strw.leidenuniv.nl or nle@mpifr-bonn.mpg.de"
  },
  {
    "objectID": "index.html#more-information-please-read",
    "href": "index.html#more-information-please-read",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "9 More information, please read",
    "text": "9 More information, please read\n1- Lee et al. (2020) https://ui.adsabs.harvard.edu/abs/2020ApJ...896...44L\n2- Tram et al. (2021) https://ui.adsabs.harvard.edu/abs/2021ApJ...906..115T\n3- Tram et al. (2024) https://www.aanda.org/articles/aa/pdf/2024/09/aa50127-24.pdf"
  },
  {
    "objectID": "index.html#citations",
    "href": "index.html#citations",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "10 Citations",
    "text": "10 Citations\nIf you use this code for your scientific projects, please cite\n{Lee}, H., {Hoang}, T., {Le}, N., & {Cho}, J. 2020, , 896, 44, \n{Tram}, L.~N., {Hoang}, T., {Lee}, H., {et al.} 2021{}, , 906, 115, \n{Tram}, L.~N., {Hoang}, T., {Wiesemeyer}, H., {et al.} 2024, , 689, A290,"
  },
  {
    "objectID": "Docs.html#starlight-polarisation",
    "href": "Docs.html#starlight-polarisation",
    "title": "Alignment by Radiative Torques",
    "section": "Starlight Polarisation",
    "text": "Starlight Polarisation\nThe degree of polarisation of starlight polarisation for a population of dust, along a certain line of sight, is \\[\\begin{equation}\n    p_{\\rm ext}(A_{\\rm V}) = 100\\times \\int_{s} n_{\\rm H}ds \\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da\\right) ~~~\\%\n\\end{equation}\\] where \\(Q_{\\rm ext}^{\\rm pol}\\) is the extinction polarization coefficient. This efficiency is determined by the residual of the extinction efficiencies in the two-component where the electric field is parallel and perpendicular to the grain rotation axis (\\(\\mathbf{a}\\)) as \\(0.5\\left[Q_{\\rm ext}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm ext}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}."
  },
  {
    "objectID": "Docs.html#thermal-dust-polarisation",
    "href": "Docs.html#thermal-dust-polarisation",
    "title": "Alignment by Radiative Torques",
    "section": "Thermal Dust Polarisation",
    "text": "Thermal Dust Polarisation\nWith a uniform magnetic field orientation, the total and polarised intensity can be estimated analytically, as described by . The total emission intensity at a position \\(r_{i}\\) along a line of sight is \\[\\begin{equation}\n        dI_{\\rm em} = n_{\\rm H}ds \\times \\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da.~~~\n\\end{equation}\\] Naturally, this intensity depends on the line of sight \\(A_{\\rm V}\\), as determined in Equation \\(\\ref{eq:Av_obs}\\). \\(B_{\\lambda}(T_{\\rm d})\\) is the black-body radiation at dust temperature \\(T_{\\rm d}\\), \\(Q_{\\rm abs}\\) is the extinction coefficient and a function of \\(a\\) and \\(\\lambda\\). In this study, we assume \\(T_{\\rm d}\\) is in equilibrium and consequently disregard the \\(T_{\\rm d}\\) distribution, which contrasts with the previous configuration in . This assumption is particularly justifiable for starless cores, where grains are probably large, making the nanodust contribution insignificant. The \\(T_{\\rm d}\\) distribution for large grains is a delta function (refer to Figure 8 in ). Additionally, our focus is on the far-IR to millimetre wavelength range, where the optical depth is very low, leading to \\(e^{-\\tau} \\simeq 1\\). For cross-check, our calculation shows that \\(\\tau_{850\\,\\rm \\mu m}\\sim 10^{-4}\\).\nThe polarized intensity of thermal dust at a distance \\(r_{i}\\) on a line of sight is given by \\[\\begin{equation}\\label{eq:Ipol_emi}\n        dI_{\\rm pol} = n_{\\rm H}ds\\times \\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da, ~~~\n\\end{equation}\\] where \\(\\psi\\) is the inclination angle of magnetic field orientation to the line of sight, \\(Q^{\\rm pol}_{\\rm abs}\\) is the absorption polarisation efficiency, determined by \\(0.5\\left[Q_{\\rm abs}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm abs}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}. As we can see, the angle \\(\\phi\\) scales the amplitude of the degree of polarisation, but does not influence the shape of the spectrum, and the degree is maximum for \\(\\phi=90^{o}\\) (i.e. the magnetic field is completely on the plane of the sky). In the following, we therefore consider the case of \\(\\phi=90^{o}\\) and discuss its effect later.\nThe degree of thermal dust polarization along a given line of sight is computed as \\[\\begin{equation}\n    p_{\\rm em}(A_{\\rm V}) = 100 \\times \\frac{\\int_{s}dI_{\\rm pol}}{\\int_{s}dI_{\\rm em}} ~~~{(\\%)}    \n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#radiative-torque",
    "href": "Docs.html#radiative-torque",
    "title": "Fundamental of DustPOL-py",
    "section": "",
    "text": "Let us consider a radiation field with the energy density of \\(u_{\\rm rad} (\\rm erg\\,cm^{-3})\\), the mean wavelength of \\(\\bar{\\lambda}\\) and an anisotropy degree of \\(\\gamma\\). Its strength is defined by a dimensionless \\(U=u_{\\rm rad}/u_{\\rm ISRF}\\), where \\(u_{\\rm ISRF}=8.64\\times 10^{-13},\\rm erg\\,cm^{-3}\\) is the radiation energy density of the interstellar radiation field (ISRF) in the solar neighborhood (). This radiation field can spin a dust grain of size \\(a\\) and density \\(\\rho\\) up to the rotational rate\nThe average radiative torque induced by the interaction of an irregular grain (with an effective size \\(a\\)), and an anisotropic radiation field (with an isotropic degree of \\(\\gamma\\)) is \\[\\begin{equation}\n    \\bar{\\Gamma}_{\\rm RAT} = \\pi a^{2} \\gamma (8.64\\times 10^{-13} U)\\left(\\frac{\\bar{\\lambda}}{2\\pi}\\right)\\bar{Q}_{\\Gamma}\n\\end{equation}\\] where \\(\\bar{Q}_{\\Gamma}\\) is the RAT efficiency, which is \\[\\begin{equation}\n    \\bar{Q}_{\\Gamma}=\\left\\{\n    \\begin{array}{l l}\n        2\\left(\\frac{\\bar{\\lambda}}{a}\\right)^{-2.7}   & \\quad \\text{for } a\\leq \\frac{\\bar{\\lambda}}{1.8},\\\\\n        0.4  & \\quad \\text{for } a&gt;\\frac{\\bar{\\lambda}}{1.8}\n    \\end{array}\\right.\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#angular-velocity-and-grain-alignment-size",
    "href": "Docs.html#angular-velocity-and-grain-alignment-size",
    "title": "Fundamental of DustPOL-py",
    "section": "",
    "text": "The RAT accelerates the irregular grain to a finite angular velocity (\\(\\omega_{\\rm RAT}\\)). For a given RAT, this rotation is faster for a lower initial momentum (\\(I_{a}\\)), and experiences deceleration due to gas collisions and reemission from the grain, characterised by the damping timescale (\\(\\tau_{\\rm damp}\\)). The maximum angular velocity with which an irregular grain is gained by RAT is \\[\\begin{equation}\n    \\omega_{\\rm RAT} = \\frac{\\bar{\\Gamma}_{\\rm RAT}\\tau_{\\rm damp}}{I_{a}}\n\\end{equation}\\] The initial momentum of a grain of size \\(a\\) is \\(I_{a}=8\\pi\\rho a^{5}/15\\) with \\(\\rho\\) is the mass density. The damping time scale is \\[\\begin{equation}\n    \\begin{split}\n        \\tau_{\\rm damp} \\simeq 8.3\\times 10^{3}&\\left(\\frac{a}{0.1\\,\\rm \\mu m}\\right)\\left(\\frac{\\rho}{3\\,\\rm g\\,cm^{-3}}\\right) \\\\\n        &\\times \\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2} \\left(\\frac{1}{1+F_{\\rm IR}}\\right) ~~~ {(\\rm yr)}\n    \\end{split}\n\\end{equation}\\] with \\(F_{\\rm IR}\\) is the ratio in timescale between the gas collision and the re-emission damping, which approximates \\[\\begin{equation}\n    F_{\\rm IR} = 0.038\\times U^{2/3}\\left(\\frac{0.1\\,\\rm \\mu m}{a}\\right)\\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2}\n\\end{equation}\\]\nThe alignment of the grain is withstand if its angular velocity is three times higher than the thermal angular velocity (\\((k_{\\rm B}T_{\\rm gas}/I_{a})^{1/2}\\)). Therefore, the minimum grain size that is aligned (referred to as the alignment size \\(a_{\\rm align}\\)) is the solution of the relation \\[\\begin{equation}\n    \\omega_{\\rm RAT}(a_{\\rm align}) = 3\\times \\left(\\frac{15k_{\\rm B}T_{\\rm gas}}{8\\pi \\rho a_{\\rm align}^{5}}\\right)^{1/2}\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#alignment-function",
    "href": "Docs.html#alignment-function",
    "title": "Fundamental of DustPOL-py",
    "section": "",
    "text": "Dust grain alignment can be characterised by two separate mechanisms: internal alignment (where the grain’s minor axis aligns with its angular momentum, see e.g. ) and external alignment (where the angular momentum aligns with a preferred axis, which could be the ambient magnetic field, radiation field, gas flow; see for a review).\nThe efficiency of internal alignment is qualitatively characterised by \\(Q_{\\rm X}\\), while it is \\(Q_{J}\\) for external alignment. The net grain alignment is called the Rayleigh reduction factor of \\(R(a)=\\langle Q_{X}Q_{J}\\rangle \\simeq f_{\\rm high-J}\\) (see ). The alignment efficiency will change from 0 to \\(f_{\\rm high-J}\\) for grain size from smaller to larger than \\(a_{\\rm align}\\). As this transition is a step-function and differs from the smooth change (see ), a smooth transition will be \\[\\begin{equation}\n    f(a) = f_{\\rm max}\\left[1-e^{-(0.5a/a_{\\rm align})^{3}} \\right]\n\\end{equation}\\] this is called the alignment function with \\(f_{\\rm max}=1\\) for perfect alignment."
  },
  {
    "objectID": "Docs.html#degree-of-dust-polarisation",
    "href": "Docs.html#degree-of-dust-polarisation",
    "title": "Fundamental of DustPOL-py",
    "section": "4 Degree of Dust Polarisation",
    "text": "4 Degree of Dust Polarisation\nIn this model, we assume that dust grains are completely aligned with uniform magnetic field, and the emission is optically thin.\n\n4.1 Starlight Polarisation\nThe degree of polarisation of starlight polarisation for a population of dust, along a certain line of sight, is \\[\\begin{equation}\n    p_{\\rm ext} = 100\\times \\int_{s} n_{\\rm H}ds \\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da\\right) ~~~\\%\n\\end{equation}\\] where \\(Q_{\\rm ext}^{\\rm pol}\\) is the extinction polarization coefficient. This efficiency is determined by the residual of the extinction efficiencies in the two-component where the electric field is parallel and perpendicular to the grain rotation axis (\\(\\mathbf{a}\\)) as \\(0.5\\left[Q_{\\rm ext}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm ext}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}.\n\n4.1.1 A simple case of 0D model: single dust composition (only silicate or astrodust)\n\\[\\begin{equation}\n    p_{\\rm ext}/N_{\\rm gas} = 100\\times \\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da\\right) ~~~\\%\n\\end{equation}\\]\nIn this case, the physical parameters can be adopted locally from observational constraints.\n\n\n4.1.2 A simple case of 0D model: mixture dust composition (silicate and carbonaceous)\n\\[\\begin{equation}\n    p_{\\rm ext}/N_{\\rm gas} = 100\\times \\sum_{\\rm dust = sil,car}\\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext, dust}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm dust}}{da}da\\right) ~~~\\%\n\\end{equation}\\]\n\n\n\n4.2 Thermal Dust Polarisation\nWith a uniform magnetic field orientation, the total and polarised intensity can be estimated analytically. The total emission intensity at a position \\(r_{i}\\) along a line of sight is \\[\\begin{equation}\n        dI_{\\rm em} = n_{\\rm H}ds \\times \\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da.~~~\n\\end{equation}\\] Naturally, this intensity depends on the line of sight \\(A_{\\rm V}\\), as determined in Equation \\(\\ref{eq:Av_obs}\\). \\(B_{\\lambda}(T_{\\rm d})\\) is the black-body radiation at dust temperature \\(T_{\\rm d}\\), \\(Q_{\\rm abs}\\) is the extinction coefficient and a function of \\(a\\) and \\(\\lambda\\). In this study, we assume \\(T_{\\rm d}\\) is in equilibrium and consequently disregard the \\(T_{\\rm d}\\) distribution, which contrasts with the previous configuration in . This assumption is particularly justifiable for starless cores, where grains are probably large, making the nanodust contribution insignificant. The \\(T_{\\rm d}\\) distribution for large grains is a delta function. Additionally, our focus is on the far-IR to millimetre wavelength range, where the optical depth is very low, leading to \\(e^{-\\tau} \\simeq 1\\). For cross-check, our calculation shows that \\(\\tau_{850\\,\\rm \\mu m}\\sim 10^{-4}\\).\nThe polarized intensity of thermal dust at a distance \\(r_{i}\\) on a line of sight is given by \\[\\begin{equation}\\label{eq:Ipol_emi}\n        dI_{\\rm pol} = n_{\\rm H}ds\\times \\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da, ~~~\n\\end{equation}\\] where \\(\\psi\\) is the inclination angle of magnetic field orientation to the line of sight, \\(Q^{\\rm pol}_{\\rm abs}\\) is the absorption polarisation efficiency, determined by \\(0.5\\left[Q_{\\rm abs}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm abs}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}. As we can see, the angle \\(\\phi\\) scales the amplitude of the degree of polarisation, but does not influence the shape of the spectrum, and the degree is maximum for \\(\\phi=90^{o}\\) (i.e. the magnetic field is completely on the plane of the sky). In the following, we therefore consider the case of \\(\\phi=90^{o}\\) and discuss its effect later.\nThe degree of thermal dust polarization along a given line of sight is computed as \\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\int_{s}dI_{\\rm pol}}{\\int_{s}dI_{\\rm em}} ~~~{(\\%)}    \n\\end{equation}\\]\n\n4.2.1 A simple case of 0D model: single dust composition (only silicate or astrodust)\n\\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da}{\\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da} ~~~{(\\%)}    \n\\end{equation}\\]\n\n\n4.2.2 A simple case of 0D model: mixtured dust composition (silicate and carbonaceous)\nIf silicate and carbon grains are separated: only silicate is aligned and polarized \\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da}{\\sum_{\\rm dust=sil,car}\\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs,dust} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm dust}}{da}da} ~~~{(\\%)}    \n\\end{equation}\\]\nIf silicate and carbon grains are bonded together: both silicate and carbon are aligned and polarized \\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\sum_{\\rm dust=sil,car}\\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs,dust}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm dust}}{da}da}{\\sum_{\\rm dust=sil,car}\\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs,dust} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm dust}}{da}da} ~~~{(\\%)}    \n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#silicate-and-carbonaceous-grains",
    "href": "Docs.html#silicate-and-carbonaceous-grains",
    "title": "Radiative Torques Alignment (RAT-A)",
    "section": "Silicate and Carbonaceous grains",
    "text": "Silicate and Carbonaceous grains\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12 (), and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM)."
  },
  {
    "objectID": "Docs.html#astrodust",
    "href": "Docs.html#astrodust",
    "title": "Fundamental of DustPOL-py",
    "section": "4 Astrodust",
    "text": "4 Astrodust\nThe log-normal and non-log normal components for the Astrodust are \\[\\begin{equation}\n  \\frac{dn}{da} = \\frac{B_{\\rm Ad}}{a}\\exp\\left(-\\frac{[\\ln(a/a_{0,\\rm Ad})]^{2}}{2\\sigma^{2}_{\\rm Ad}}\\right) + \\frac{A_{0}}{a}\\exp\\left(\\sum_{i=1}^{5}A_{i}\\left[\\ln\\left(\\frac{a}{Å}\\right)\\right]^{i}\\right)\n\\end{equation}\\] where the parameters are given in Table 1 in Hensley & Draine 2023."
  },
  {
    "objectID": "Docs.html#mnr-like-distribution",
    "href": "Docs.html#mnr-like-distribution",
    "title": "I.Radiative Torques Alignment (RAT-A)",
    "section": "MNR-like distribution",
    "text": "MNR-like distribution\nA power-law grain size distribution assumption for both the original large grains and the smaller grains produced by disruption, with a power-law index \\(\\beta\\) as \\[\\begin{equation}\n    \\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm sil,car}}{da}=Ca^{\\beta} \\ \\ \\ \\rm{(a_{\\rm min}\\leq a \\leq a_{\\rm max})},\n\\end{equation}\\] where \\(C\\) is the normalization constants. This value is distinc for different grain compositions, and is determined through the dust-to-gas mass ratio \\(M_{\\rm d/g}\\).\n\nSilicate and Carbonaceous grains\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12 (), and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM).\n\n\nAstrodust\nFor the Astrodust \\[\\begin{equation}\n  \\begin{split}\n    C\\rho_{\\rm dust} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    C\\rho_{\\rm dust} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#draine-and-lee",
    "href": "Docs.html#draine-and-lee",
    "title": "I. Radiative Torques Alignment (RAT-A)",
    "section": "Draine and Lee",
    "text": "Draine and Lee"
  },
  {
    "objectID": "Docs.html#weingartner-and-draine",
    "href": "Docs.html#weingartner-and-draine",
    "title": "I. Radiative Torques Alignment (RAT-A)",
    "section": "Weingartner and Draine",
    "text": "Weingartner and Draine"
  },
  {
    "objectID": "Docs.html#i.1-radiative-torque",
    "href": "Docs.html#i.1-radiative-torque",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "",
    "text": "Let us consider a radiation field with the energy density of \\(u_{\\rm rad} (\\rm erg\\,cm^{-3})\\), the mean wavelength of \\(\\bar{\\lambda}\\) and an anisotropy degree of \\(\\gamma\\). Its strength is defined by a dimensionless \\(U=u_{\\rm rad}/u_{\\rm ISRF}\\), where \\(u_{\\rm ISRF}=8.64\\times 10^{-13},\\rm erg\\,cm^{-3}\\) is the radiation energy density of the interstellar radiation field (ISRF) in the solar neighborhood (). This radiation field can spin a dust grain of size \\(a\\) and density \\(\\rho\\) up to the rotational rate\nThe average radiative torque induced by the interaction of an irregular grain (with an effective size \\(a\\)), and an anisotropic radiation field (with an isotropic degree of \\(\\gamma\\)) is \\[\\begin{equation}\n    \\bar{\\Gamma}_{\\rm RAT} = \\pi a^{2} \\gamma (8.64\\times 10^{-13} U)\\left(\\frac{\\bar{\\lambda}}{2\\pi}\\right)\\bar{Q}_{\\Gamma}\n\\end{equation}\\] where \\(\\bar{Q}_{\\Gamma}\\) is the RAT efficiency, which is \\[\\begin{equation}\n    \\bar{Q}_{\\Gamma}=\\left\\{\n    \\begin{array}{l l}\n        2\\left(\\frac{\\bar{\\lambda}}{a}\\right)^{-2.7}   & \\quad \\text{for } a\\leq \\frac{\\bar{\\lambda}}{1.8},\\\\\n        0.4  & \\quad \\text{for } a&gt;\\frac{\\bar{\\lambda}}{1.8}\n    \\end{array}\\right.\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#i.2-angular-velocity-and-grain-alignment-size",
    "href": "Docs.html#i.2-angular-velocity-and-grain-alignment-size",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "",
    "text": "The RAT accelerates the irregular grain to a finite angular velocity (\\(\\omega_{\\rm RAT}\\)). For a given RAT, this rotation is faster for a lower initial momentum (\\(I_{a}\\)), and experiences deceleration due to gas collisions and reemission from the grain, characterised by the damping timescale (\\(\\tau_{\\rm damp}\\)). The maximum angular velocity with which an irregular grain is gained by RAT is \\[\\begin{equation}\n    \\omega_{\\rm RAT} = \\frac{\\bar{\\Gamma}_{\\rm RAT}\\tau_{\\rm damp}}{I_{a}}\n\\end{equation}\\] The initial momentum of a grain of size \\(a\\) is \\(I_{a}=8\\pi\\rho a^{5}/15\\) with \\(\\rho\\) is the mass density. The damping time scale is \\[\\begin{equation}\n    \\begin{split}\n        \\tau_{\\rm damp} \\simeq 8.3\\times 10^{3}&\\left(\\frac{a}{0.1\\,\\rm \\mu m}\\right)\\left(\\frac{\\rho}{3\\,\\rm g\\,cm^{-3}}\\right) \\\\\n        &\\times \\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2} \\left(\\frac{1}{1+F_{\\rm IR}}\\right) ~~~ {(\\rm yr)}\n    \\end{split}\n\\end{equation}\\] with \\(F_{\\rm IR}\\) is the ratio in timescale between the gas collision and the re-emission damping, which approximates \\[\\begin{equation}\n    F_{\\rm IR} = 0.038\\times U^{2/3}\\left(\\frac{0.1\\,\\rm \\mu m}{a}\\right)\\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2}\n\\end{equation}\\]\nThe alignment of the grain is withstand if its angular velocity is three times higher than the thermal angular velocity (\\((k_{\\rm B}T_{\\rm gas}/I_{a})^{1/2}\\)). Therefore, the minimum grain size that is aligned (referred to as the alignment size \\(a_{\\rm align}\\)) is the solution of the relation \\[\\begin{equation}\n    \\omega_{\\rm RAT}(a_{\\rm align}) = 3\\times \\left(\\frac{15k_{\\rm B}T_{\\rm gas}}{8\\pi \\rho a_{\\rm align}^{5}}\\right)^{1/2}\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#i.3-alignment-function",
    "href": "Docs.html#i.3-alignment-function",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "",
    "text": "Dust grain alignment can be characterised by two separate mechanisms: internal alignment (where the grain’s minor axis aligns with its angular momentum, see e.g. ) and external alignment (where the angular momentum aligns with a preferred axis, which could be the ambient magnetic field, radiation field, gas flow; see for a review).\nThe efficiency of internal alignment is qualitatively characterised by \\(Q_{\\rm X}\\), while it is \\(Q_{J}\\) for external alignment. The net grain alignment is called the Rayleigh reduction factor of \\(R(a)=\\langle Q_{X}Q_{J}\\rangle \\simeq f_{\\rm high-J}\\) (see ). The alignment efficiency will change from 0 to \\(f_{\\rm high-J}\\) for grain size from smaller to larger than \\(a_{\\rm align}\\). As this transition is a step-function and differs from the smooth change (see ), a smooth transition will be \\[\\begin{equation}\n    f(a) = f_{\\rm max}\\left[1-e^{-(0.5a/a_{\\rm align})^{3}} \\right]\n\\end{equation}\\] this is called the alignment function with \\(f_{\\rm max}=1\\) for perfect alignment."
  },
  {
    "objectID": "Docs.html#i.4-degree-of-dust-polarisation",
    "href": "Docs.html#i.4-degree-of-dust-polarisation",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "",
    "text": "In this model, we assume a uniform magnetic field and neglect the effect of the field fluctuation. The latter effect is discussed in …\n\n\nThe degree of polarisation of starlight polarisation for a population of dust, along a certain line of sight, is \\[\\begin{equation}\n    p_{\\rm ext} = 100\\times \\int_{s} n_{\\rm H}ds \\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da\\right) ~~~\\%\n\\end{equation}\\] where \\(Q_{\\rm ext}^{\\rm pol}\\) is the extinction polarization coefficient. This efficiency is determined by the residual of the extinction efficiencies in the two-component where the electric field is parallel and perpendicular to the grain rotation axis (\\(\\mathbf{a}\\)) as \\(0.5\\left[Q_{\\rm ext}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm ext}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}.\n\n\n\\[\\begin{equation}\n    p_{\\rm ext}/N_{\\rm gas} = 100\\times \\left(\\int^{a_{\\rm max}}_{a_{\\rm min}}\\frac{1}{2}\\pi a^{2}Q^{\\rm pol}_{\\rm ext}f(a)\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da\\right) ~~~\\%\n\\end{equation}\\]\nIn this case, the physical parameters can be adopted locally from observational constraints.\n\n\n\n\nWith a uniform magnetic field orientation, the total and polarised intensity can be estimated analytically, as described by . The total emission intensity at a position \\(r_{i}\\) along a line of sight is \\[\\begin{equation}\n        dI_{\\rm em} = n_{\\rm H}ds \\times \\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da.~~~\n\\end{equation}\\] Naturally, this intensity depends on the line of sight \\(A_{\\rm V}\\), as determined in Equation \\(\\ref{eq:Av_obs}\\). \\(B_{\\lambda}(T_{\\rm d})\\) is the black-body radiation at dust temperature \\(T_{\\rm d}\\), \\(Q_{\\rm abs}\\) is the extinction coefficient and a function of \\(a\\) and \\(\\lambda\\). In this study, we assume \\(T_{\\rm d}\\) is in equilibrium and consequently disregard the \\(T_{\\rm d}\\) distribution, which contrasts with the previous configuration in . This assumption is particularly justifiable for starless cores, where grains are probably large, making the nanodust contribution insignificant. The \\(T_{\\rm d}\\) distribution for large grains is a delta function (refer to Figure 8 in ). Additionally, our focus is on the far-IR to millimetre wavelength range, where the optical depth is very low, leading to \\(e^{-\\tau} \\simeq 1\\). For cross-check, our calculation shows that \\(\\tau_{850\\,\\rm \\mu m}\\sim 10^{-4}\\).\nThe polarized intensity of thermal dust at a distance \\(r_{i}\\) on a line of sight is given by \\[\\begin{equation}\\label{eq:Ipol_emi}\n        dI_{\\rm pol} = n_{\\rm H}ds\\times \\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da, ~~~\n\\end{equation}\\] where \\(\\psi\\) is the inclination angle of magnetic field orientation to the line of sight, \\(Q^{\\rm pol}_{\\rm abs}\\) is the absorption polarisation efficiency, determined by \\(0.5\\left[Q_{\\rm abs}(\\mathbf{E}\\parallel \\mathbf{a})-Q_{\\rm abs}(\\mathbf{E}\\perp \\mathbf{a})\\right]\\). These components are taken from the { database}. As we can see, the angle \\(\\phi\\) scales the amplitude of the degree of polarisation, but does not influence the shape of the spectrum, and the degree is maximum for \\(\\phi=90^{o}\\) (i.e. the magnetic field is completely on the plane of the sky). In the following, we therefore consider the case of \\(\\phi=90^{o}\\) and discuss its effect later.\nThe degree of thermal dust polarization along a given line of sight is computed as \\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\int_{s}dI_{\\rm pol}}{\\int_{s}dI_{\\rm em}} ~~~{(\\%)}    \n\\end{equation}\\]\n\n\n\\[\\begin{equation}\n    p_{\\rm em} = 100 \\times \\frac{\\int^{a_{\\rm max}}_{a_{\\rm align}} f(a)\\sin^{2}\\psi Q^{\\rm pol}_{\\rm abs}\\pi a^{2} \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da}{\\int^{a_{\\rm max}}_{a_{\\rm min}} Q_{\\rm abs} \\pi a^{2}\n        \\times B_{\\lambda}(T_{\\rm d})\\frac{1}{n_{\\rm H}}\\frac{dn}{da}da} ~~~{(\\%)}    \n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#iii.1-mnr-like-distribution",
    "href": "Docs.html#iii.1-mnr-like-distribution",
    "title": "I. Radiative Torques Alignment (RAT-A)",
    "section": "III.1 MNR-like distribution",
    "text": "III.1 MNR-like distribution\nA power-law grain size distribution assumption for both the original large grains and the smaller grains produced by disruption, with a power-law index \\(\\beta\\) as \\[\\begin{equation}\n    \\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm sil,car}}{da}=Ca^{\\beta} \\ \\ \\ \\rm{(a_{\\rm min}\\leq a \\leq a_{\\rm max})},\n\\end{equation}\\] where \\(C\\) is the normalization constants. This value is distinc for different grain compositions, and is determined through the dust-to-gas mass ratio \\(M_{\\rm d/g}\\).\n\nIII.1.1 Silicate and Carbonaceous grains\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12 (), and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM).\n\n\nIII.1.2 Astrodust\nFor the Astrodust \\[\\begin{equation}\n  \\begin{split}\n    C\\rho_{\\rm dust} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    C\\rho_{\\rm dust} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#iii.2-others",
    "href": "Docs.html#iii.2-others",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "3.2 III.2 Others",
    "text": "3.2 III.2 Others\n\n3.2.1 III.2.1 Draine and Lee\n\n\n3.2.2 III.2.2 Weingartner and Draine"
  },
  {
    "objectID": "Tutorials.html",
    "href": "Tutorials.html",
    "title": "Setup and execute DustPOL-py",
    "section": "",
    "text": "1-Download the source files from: github\n2-Go to the directory\n3-From the terminal, type\n\npip install -e .\n\nIt is recommended to use a virtual environment to prevent conflicts with existing Python packages."
  },
  {
    "objectID": "Tutorials.html#physical-parameters",
    "href": "Tutorials.html#physical-parameters",
    "title": "Setup and execute DustPOL-py",
    "section": "2 Physical Parameters",
    "text": "2 Physical Parameters\nThe basic physical parameters for DustPOL-py are listed as below\n\n\n\n\n\n\n\n\nParameter\nExample Value\nComments\n\n\n\n\noutput_dir\noutput\ndirectory for the outputs\n\n\nratd\noff\nturn on/off rotational disruption\n\n\nU\n3.0\nradiation field (dimensionless)\n\n\ngamma\n0.3\nanisotropic degree of radiation field\n\n\nmean_lam\n1.3\nmean wavelength of radiation field\n\n\nd\n0\n\n\n\nngas\n1.4e5\ngas volume density (cm-3)\n\n\nTgas\n16.4\ngas temperature (K)\n\n\naligned_dust\nastro\n‘sil’ or ‘car’ or ‘sil+car’ or ‘astro’\n\n\namin\n3.1e-4\nmininum grain size (micron)\n\n\namax\n1.0\nmaximum grain size (micron)\n\n\nTdust\n0\ndust temperature (K)\n\n\n\n\n* 0: convert U to Tdust\n\n\n\n\n* numerics: convert Tdust to U when U=0\n\n\nrho\n3\n[g*cm^-3]:dust volume density\n\n\nalpha\n1.4\ngrain axes-ratio #prolate 0.3333\n\n\nSmax\n1e7\n[erg cm-3]: tensile strength of grains\n\n\n\n\n*effective only when ratd=‘on’\n\n\ndust_gas_ratio\n0.01\ndust-to-gas-mass ratio\n\n\nlaw\nMRN\nsize-distribution law: ‘MRN’ or ‘WD01’ or ‘DL07’\n\n\npower_index\n-3.5\npower-index of GSD if ‘MRN’\n\n\nRATalign\nRAT\nRAT or MRAT theory\n\n\nfmax\n1.0\n1=100%: maximum of grain alignment efficiency\n\n\nBfield\n600.0\nstrength of B-field (only active for MRAT)\n\n\nB_angle\n90.0\n[deg] inclination angle of B-field wrt. LOS\n\n\nNcl\n10.\nif RATalign==MRAT (Ncl: number of iron atoms per cluster)\n\n\nphi_sp\n0.1\nvolume fitting factor of iron cluster (0.1=10%)\n\n\nfp\n0.1\nIron fraction of PM grains\n\n\nparallel\nTrue\nParallelization calculation for heavily computed tasked\n\n\ncpu\n-1\nif parallel is used, give the number of cpu cores (-1 means all)"
  },
  {
    "objectID": "Tutorials.html#run-simple-model-0d",
    "href": "Tutorials.html#run-simple-model-0d",
    "title": "Setup and execute DustPOL-py",
    "section": "3 Run simple model (0D)",
    "text": "3 Run simple model (0D)\nLet’s download the input physical parameters (Download) and save it in an sub-folder ‘data’ from your directory (the name is default as ‘input_template.dustpol’, but you are encouraged to rename it).\n\n3.1 Starlight polarization\nHere is a simple example showing how to compute the starlight polarisation (see Figure 1) for \\(n_{\\rm gas}=1.4\\times 10^{5}\\,\\rm cm^{-3}\\), \\(U=3\\), \\(\\bar{\\lambda}=1.3\\,\\mu\\)m and \\(a_{\\rm max}=1\\,\\mu\\)m. DustPOL-py is called as\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL\nexe = DustPOL('data/input_template.dustpol') \nw,pext,_=exe.cal_pol_abs()\next_curve = exe.extinction()\n\nfig, ax = plt.subplots(figsize=(8, 3))\nax.set_xlabel('$\\\\rm wavelength\\\\,(\\\\mu m)$')\nax.set_ylabel('$\\\\rm p_{ext}/N_{H}\\\\,(\\\\%/cm^{-2})$')\nax.set_title('$\\\\rm Starlight\\\\,Polarization$',pad=20)\nax1=ax.twinx()\nax1.set_ylabel('$\\\\rm A_{\\\\lambda}/N_{\\\\rm H}$')\n\nax.semilogx(w * 1e4, pext,color='k',ls='-')\nax1.loglog(w * 1e4, ext_curve,color='k',ls='--')\n                 \nax1.loglog([],[],color='k',ls='-',label='$\\\\rm pol.\\\\,spectrum$')\nax1.loglog([],[],color='k',ls='--',label='$\\\\rm Extinction\\\\, curve$')\nax1.legend(bbox_to_anchor=(0.95,0.95),frameon=False)\nax1.set_ylim([1e-23,1e-20])\n\nplt.show()\n\n      U=3.000            \nINFO:  ---&gt; ngas=1.400e+05 (cm-3), amin=3.162e-04 (um), amax=0.531 (um), a_ali=0.183 (um), f_max=1.000, Tgas=16.400 (K), mean_lam=1.300 (um)         [DustPOL_py.align]\n\n\n\n\n\n\n\n\nFigure 1: An example of polarisation spectrum for starlight dust polarisation\n\n\n\n\n\nNote: to save output, use exe.cal_pol_abs(save_output=True). The output will be named as starlight.dat\n\n\n3.2 Thermal dust polarization\nUsing the same input parameters as above, here is a simple example showing how to compute the thermal dust polarisation (see Figure 2), DustPOL-py is called as\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL\nw,I_list,p_list=DustPOL('data/input_template.dustpol').cal_pol_emi()\nfig,ax=plt.subplots(figsize=(9,3))\nax.semilogx(w*1e4,p_list[0],color='k',ls='-')\nax.set_xlabel('$\\\\rm wavelength\\\\,(\\\\mu m)$')\nax.set_ylabel('$\\\\rm p_{em}\\\\,(\\\\%)$')\nax.set_title('$\\\\rm Thermal\\\\,Polarization$')\nplt.show()\n\nINFO:  U=3.000 : radiation --&gt;&gt; Tdust             [DustPOL_py.DustPOL_class]\nINFO:  ---&gt; ngas=1.400e+05 (cm-3), amin=3.162e-04 (um), amax=0.531 (um), a_ali=0.183 (um), f_max=1.000, Tgas=16.400 (K), mean_lam=1.300 (um)         [DustPOL_py.align]\n\n\n\n\n\n\n\n\nFigure 2: An example of polarisation spectrum for thermal dust polarisation\n\n\n\n\n\nNote: to save output, use cal_pol_emi(save_output=True). The output will be named as thermal.dat"
  },
  {
    "objectID": "Tutorials.html#installation",
    "href": "Tutorials.html#installation",
    "title": "Setup and execute DustPOL-py",
    "section": "",
    "text": "1-Download the source files from: github\n2-Go to the directory\n3-From the terminal, type\n\npip install -e .\n\nIt is recommended to use a virtual environment to prevent conflicts with existing Python packages."
  },
  {
    "objectID": "Docs.html#iii.1-mrn-like-distribution",
    "href": "Docs.html#iii.1-mrn-like-distribution",
    "title": "1 I. Radiative Torques Alignment (RAT-A)",
    "section": "3.1 III.1 MRN-like distribution",
    "text": "3.1 III.1 MRN-like distribution\nA power-law grain size distribution assumption for both the original large grains and the smaller grains produced by disruption, with a power-law index \\(\\beta\\) as \\[\\begin{equation}\n    \\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm sil,car}}{da}=Ca^{\\beta} \\ \\ \\ \\rm{(a_{\\rm min}\\leq a \\leq a_{\\rm max})},\n\\end{equation}\\] where \\(C\\) is the normalization constants. This value is distinc for different grain compositions, and is determined through the dust-to-gas mass ratio \\(M_{\\rm d/g}\\).\n\n3.1.1 III.1.1 Silicate and Carbonaceous grains\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12 (), and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM).\n\n\n3.1.2 III.1.2 Astrodust\nFor the Astrodust \\[\\begin{equation}\n  \\begin{split}\n    C\\rho_{\\rm dust} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    C\\rho_{\\rm dust} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\]"
  },
  {
    "objectID": "Tutorials.html#download-the-data",
    "href": "Tutorials.html#download-the-data",
    "title": "Setup and execute DustPOL-py",
    "section": "Download the Data",
    "text": "Download the Data\n  Download the data file \nTo compute the starlight polarisation (see Figure 1), DustPOL-py is called as\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py.DustPOL_class import DustPOL\nw,p,_=DustPOL('data/input.dustpol').cal_pol_abs()\nfig,ax=plt.subplots(figsize=(9,3))\nax.semilogx(w*1e4,p)\nplt.show()\n\nINFO:    *** Checking disruption:  no  [DustPOL_py.disrupt]\n      U=1.000            \nINFO:  ---&gt; ngas=1.000e+04 (cm-3), amin=3.162e-04 (um), amax=0.094 (um), a_ali=0.067 (um), f_max=1.000, Tgas=10.000 (K), mean_lam=1.300 (um)         [DustPOL_py.align]\n\n\n\n\n\n\n\n\nFigure 1: Polarisation spectrum for starlight dust polarisation\n\n\n\n\n\nTo compute the thermal dust polarisation (see Figure 2), DustPOL-py is called as\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py.DustPOL_class import DustPOL\nw,I_list,p_list=DustPOL('data/input.dustpol').cal_pol_emi()\nfig,ax=plt.subplots(figsize=(9,3))\nax.semilogx(w*1e4,p_list[0])\nplt.show()\n\nINFO:    *** Checking disruption:  no  [DustPOL_py.disrupt]\nINFO:  U=1.000 : radiation --&gt;&gt; Tdust             [DustPOL_py.DustPOL_class]\nINFO:  ---&gt; ngas=1.000e+04 (cm-3), amin=3.162e-04 (um), amax=0.094 (um), a_ali=0.067 (um), f_max=1.000, Tgas=10.000 (K), mean_lam=1.300 (um)         [DustPOL_py.align]\n\n\n\n\n\n\n\n\nFigure 2: Polarisation spectrum for thermal dust polarisation"
  },
  {
    "objectID": "Applications.html",
    "href": "Applications.html",
    "title": "Applications of DustPOL-py",
    "section": "",
    "text": "We present some examples of using DustPOL-py in understanding the physics of linear dust polarisation towards different astrophysical object with distinc physical properties."
  },
  {
    "objectID": "Applications.html#thermal-dust-polarisation-in-musca-filament",
    "href": "Applications.html#thermal-dust-polarisation-in-musca-filament",
    "title": "Applications of DustPOL-py",
    "section": "2 Thermal dust polarisation in Musca filament",
    "text": "2 Thermal dust polarisation in Musca filament\nMusca is located at a distance of \\(170\\,\\)pc. The filament is in its early evolutionary stage and lacks active star formation. Musca is known for being an isothermal filament in hydrostatic equilibrium and already fragmented; new stars can be formed in the near future. In this work, we use \\(\\it{Planck}\\) polarization data at 850\\(\\,\\mu\\)m, showing that the degree of polarization (\\(p(\\%)\\)) is lower toward the spike of the filament (green dots in Figure 1). The DustPOL-py model well reproduce this decline of \\(p(\\%)\\) due to the loss of grain alignment efficiency, because of higher gas density and lower radiation intensity at the filament’s spike.\n\n\n\nFigure 1: Series of B-fields And dust in interstelLar fiLAments using Dust POLarization (BALLAD-POL), led by Ms. Nguyen B. Ngoc. For more details, please have a look at this article"
  },
  {
    "objectID": "Applications.html#this-work-is-in-a-series-of-led-by-ms.-nguyen-b.-ngoc",
    "href": "Applications.html#this-work-is-in-a-series-of-led-by-ms.-nguyen-b.-ngoc",
    "title": "Applications of DustPOL-py",
    "section": "This work is in a series of …, led by Ms. Nguyen B. Ngoc",
    "text": "This work is in a series of …, led by Ms. Nguyen B. Ngoc"
  },
  {
    "objectID": "Applications.html#information",
    "href": "Applications.html#information",
    "title": "Applications of DustPOL-py",
    "section": "Information",
    "text": "Information\nThis work is in a series of “B-fields And dust in interstelLar fiLAments using Dust POLarization (BALLAD-POL)”, led by Ms. Nguyen B. Ngoc."
  },
  {
    "objectID": "Applications.html#thermal-dust-polarisation-in",
    "href": "Applications.html#thermal-dust-polarisation-in",
    "title": "Applications of DustPOL-py",
    "section": "Thermal dust polarisation in",
    "text": "Thermal dust polarisation in"
  },
  {
    "objectID": "example_scripts.html",
    "href": "example_scripts.html",
    "title": "DustPOL-website",
    "section": "",
    "text": "#test"
  },
  {
    "objectID": "Example_scripts.html",
    "href": "Example_scripts.html",
    "title": "Examples in detail for using DustPOL-py",
    "section": "",
    "text": "The input parameters (e.g. ngas, U or Tdust) can be adopted from observations, thus it can be useful to model large physical scales with different physical properties. The basic tutorial on setting and execute this 0D model is introduced in Tutorials."
  },
  {
    "objectID": "Applications.html#thermal-dust-polarisation-in-orion-molecular-cloud-1-omc-1",
    "href": "Applications.html#thermal-dust-polarisation-in-orion-molecular-cloud-1-omc-1",
    "title": "Applications of DustPOL-py",
    "section": "Thermal dust polarisation in Orion Molecular Cloud 1 (OMC-1)",
    "text": "Thermal dust polarisation in Orion Molecular Cloud 1 (OMC-1)\n\\(\\rho\\) Oph-A is a molecular cloud in one of the closest dark cloud complexes and star-forming regions, \\(\\rho\\) Ophiuchi. The distance to this complex is reported to be ∼120–160 pc. This region is significantly influenced by high-energy radiation from a nearby high-mass Oph-S1 star, which is a B association star. Among several dark cloud cores in \\(\\rho\\) Ophiuchi, Oph-A is one of the best laboratories to understand the multiband dust polarization in the context of highenergy radiation giving us an opportunity to investigate RAT in detail. Using the SOFIA/HAWC+ polarimetric data at 89 and 154\\(\\,\\mu\\)m, we find that the degree of polarization (\\(p(\\%)\\)) of thermal dust emission first increases with the grain temperature and then decreases once the grain temperature exceeds $$ 25–32\\(\\,\\)K. The latter trend differs from the prediction of the popular RAdiative Torques (RATs) alignment theory, which implies a monotonic increase of the polarization fraction with the grain temperature. The DustPOL-py results could successfully reproduce both the rising and declining trends of the observational data. Moreover, we show that the alignment of only silicate grains or a mixture of silicate–carbon grains within a composite structure can reproduce the observational trends.\n\n\n\nFigure 2: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article"
  },
  {
    "objectID": "Applications.html#thermal-dust-polarisation-in-ophiuchus-dark-cloud-oph-a",
    "href": "Applications.html#thermal-dust-polarisation-in-ophiuchus-dark-cloud-oph-a",
    "title": "Applications of DustPOL-py",
    "section": "3 Thermal dust polarisation in Ophiuchus dark cloud (Oph-A)",
    "text": "3 Thermal dust polarisation in Ophiuchus dark cloud (Oph-A)\n\\(\\rho\\) Oph-A is a molecular cloud in one of the closest dark cloud complexes and star-forming regions, \\(\\rho\\) Ophiuchi. The distance to this complex is reported to be ∼120–160 pc. This region is significantly influenced by high-energy radiation from a nearby high-mass Oph-S1 star, which is a B association star. Among several dark cloud cores in \\(\\rho\\) Ophiuchi, Oph-A is one of the best laboratories to understand the multiband dust polarization in the context of highenergy radiation giving us an opportunity to investigate RAT in detail. Using the SOFIA/HAWC+ polarimetric data at 89 and 154\\(\\,\\mu\\)m, we find that the degree of polarization (\\(p(\\%)\\)) of thermal dust emission first increases with the grain temperature and then decreases once the grain temperature exceeds \\(\\simeq 25–32\\,\\)K. The latter trend differs from the prediction of the popular RAdiative Torques (RATs) alignment theory, which implies a monotonic increase of the polarization fraction with the grain temperature. The DustPOL-py results could successfully reproduce both the rising and declining trends of the observational data. Moreover, we show that the alignment of only silicate grains or a mixture of silicate–carbon grains within a composite structure can reproduce the observational trends.\n\n\n\nFigure 2: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article"
  },
  {
    "objectID": "Applications.html#thermal-dust-polarization-in-orion-molecular-cloud-omc-1",
    "href": "Applications.html#thermal-dust-polarization-in-orion-molecular-cloud-omc-1",
    "title": "Applications of DustPOL-py",
    "section": "4 Thermal dust polarization in Orion Molecular Cloud (OMC-1)",
    "text": "4 Thermal dust polarization in Orion Molecular Cloud (OMC-1)\nLocated at a distance of 388\\(\\pm 5\\,\\)pc, the Orion Nebula is the nearest high-mass star formation region. OMC-1 or Orion A is located behind an H II region ionized by O-B stars from the Trapezium cluster. OMC-1 consists of two principal clumps, the northern Becklin– Neugebauer–Kleinmann–Low (BN-KL) clump and the southern Orion S clump. BN-KL hosts an extremely explosive molecular outflow with a wide opening angle and multiple ejecta.\n\n4.1 Orion BN-KL: single wavelengths\nWe use thermal dust polarization data observed toward the Orion BN-KL by SOFIA/HAWC+ at 89, 154 and 214\\(\\,\\mu\\)m and JCMT/POL-2 at 850\\(\\,\\mu\\)m. Figure 3 showed that DustPOL-py could reproduce observational trends of \\(p(\\%)-T_{\\rm dust}\\).\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n4.2 OMC-1: pixel-to-pixel\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n4.3 OMC-1: polarization spectrum\n\n \n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article"
  },
  {
    "objectID": "Docs.html#mrn-like-distribution",
    "href": "Docs.html#mrn-like-distribution",
    "title": "Fundamental of DustPOL-py",
    "section": "3.1 MRN-like distribution",
    "text": "3.1 MRN-like distribution\nA power-law grain size distribution assumption for both the original large grains and the smaller grains produced by disruption, with a power-law index \\(\\beta\\) as \\[\\begin{equation}\n    \\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm sil,car}}{da}=Ca^{\\beta} \\ \\ \\ \\rm{(a_{\\rm min}\\leq a \\leq a_{\\rm max})},\n\\end{equation}\\] where \\(C\\) is the normalization constants. This value is distinc for different grain compositions, and is determined through the dust-to-gas mass ratio \\(M_{\\rm d/g}\\).\n\n3.1.1 Silicate and Carbonaceous grains\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12 (), and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM).\n\n\n3.1.2 Astrodust\nFor the Astrodust \\[\\begin{equation}\n  \\begin{split}\n    C\\rho_{\\rm dust} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    C\\rho_{\\rm dust} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\]"
  },
  {
    "objectID": "Docs.html#others",
    "href": "Docs.html#others",
    "title": "Fundamental of DustPOL-py",
    "section": "3.2 Others",
    "text": "3.2 Others\n\n3.2.1 Draine and Lee\n\n\n3.2.2 Weingartner and Draine"
  },
  {
    "objectID": "Applications.html#starlight-polarization-toward-starless-core",
    "href": "Applications.html#starlight-polarization-toward-starless-core",
    "title": "Applications of DustPOL-py",
    "section": "1 Starlight polarization toward starless core",
    "text": "1 Starlight polarization toward starless core\n\n1.1 Starless core Pipe-109"
  },
  {
    "objectID": "Applications.html#starlight-polarization",
    "href": "Applications.html#starlight-polarization",
    "title": "Applications of DustPOL-py",
    "section": "1 Starlight polarization",
    "text": "1 Starlight polarization\n\n1.1 Starless core Pipe-109"
  },
  {
    "objectID": "Applications.html#thermal-dust-polarisation",
    "href": "Applications.html#thermal-dust-polarisation",
    "title": "Applications of DustPOL-py",
    "section": "2 Thermal dust polarisation",
    "text": "2 Thermal dust polarisation\n\n2.1 Musca filament\nMusca is located at a distance of \\(170\\,\\)pc. The filament is in its early evolutionary stage and lacks active star formation. Musca is known for being an isothermal filament in hydrostatic equilibrium and already fragmented; new stars can be formed in the near future. In this work, we use \\(\\it{Planck}\\) polarization data at 850\\(\\,\\mu\\)m, showing that the degree of polarization (\\(p(\\%)\\)) is lower toward the spike of the filament (green dots in Figure 1). The DustPOL-py model well reproduce this decline of \\(p(\\%)\\) due to the loss of grain alignment efficiency, because of higher gas density and lower radiation intensity at the filament’s spike.\n\n\n\nFigure 1: Series of B-fields And dust in interstelLar fiLAments using Dust POLarization (BALLAD-POL), led by Ms. Nguyen B. Ngoc. For more details, please have a look at this article\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.2 Ophiuchus dark cloud (Oph-A)\n\\(\\rho\\) Oph-A is a molecular cloud in one of the closest dark cloud complexes and star-forming regions, \\(\\rho\\) Ophiuchi. The distance to this complex is reported to be ∼120–160 pc. This region is significantly influenced by high-energy radiation from a nearby high-mass Oph-S1 star, which is a B association star. Among several dark cloud cores in \\(\\rho\\) Ophiuchi, Oph-A is one of the best laboratories to understand the multiband dust polarization in the context of highenergy radiation giving us an opportunity to investigate RAT in detail. Using the SOFIA/HAWC+ polarimetric data at 89 and 154\\(\\,\\mu\\)m, we find that the degree of polarization (\\(p(\\%)\\)) of thermal dust emission first increases with the grain temperature and then decreases once the grain temperature exceeds \\(\\simeq 25–32\\,\\)K. The latter trend differs from the prediction of the popular RAdiative Torques (RATs) alignment theory, which implies a monotonic increase of the polarization fraction with the grain temperature. The DustPOL-py results could successfully reproduce both the rising and declining trends of the observational data. Moreover, we show that the alignment of only silicate grains or a mixture of silicate–carbon grains within a composite structure can reproduce the observational trends.\n\n\n\nFigure 2: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n2.3 Orion Molecular Cloud\nLocated at a distance of 388\\(\\pm 5\\,\\)pc, the Orion Nebula is the nearest high-mass star formation region. OMC-1 or Orion A is located behind an H II region ionized by O-B stars from the Trapezium cluster. OMC-1 consists of two principal clumps, the northern Becklin– Neugebauer–Kleinmann–Low (BN-KL) clump and the southern Orion S clump. BN-KL hosts an extremely explosive molecular outflow with a wide opening angle and multiple ejecta.\n\n2.3.1 Orion BN-KL: single wavelengths\nWe use thermal dust polarization data observed toward the Orion BN-KL by SOFIA/HAWC+ at 89, 154 and 214\\(\\,\\mu\\)m and JCMT/POL-2 at 850\\(\\,\\mu\\)m. Figure 3 showed that DustPOL-py could reproduce observational trends of \\(p(\\%)-T_{\\rm dust}\\).\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n2.3.2 OMC-1: pixel-to-pixel\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n2.3.3 OMC-1: polarization spectrum\n\n \n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article"
  },
  {
    "objectID": "index.html#contributors",
    "href": "index.html#contributors",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "3 Contributors",
    "text": "3 Contributors\nPham N. Diep, Nguyen B. Ngoc, Bao Truong, Ngan Lê"
  },
  {
    "objectID": "Docs.html#radiative-torques-alignment-rat-a",
    "href": "Docs.html#radiative-torques-alignment-rat-a",
    "title": "Fundamental of DustPOL-py",
    "section": "",
    "text": "The physics of grain alignment by radiative torques is described in detail in numerous works. In this section, we recall the principles of this theory and formulations for our model. For more details, we refer to the most recent reviews in Andersson et al. 2015 and Tram & Hoang 2022, and studies in Lazarian & Hoang 2021 and Hoang et al. 2022.\n\n\nA radiation field is characterized by the following three physical paramters: the radiation spectrum of \\(u_{\\lambda}\\), the mean wavelength of \\(\\bar{\\lambda}\\) and an anisotropy degree of \\(\\gamma\\).\n\n\nThe strength is defined by a dimensionless  \\[\n  U=\\frac{\\int_{0.091\\,\\mu m}^{20\\,\\mu m} u_{\\lambda}d\\lambda}{u_{\\rm ISRF}}, \\label{eq:test}\n\\]  where \\(u_{\\rm ISRF}=8.64\\times 10^{-13}\\,\\rm erg\\,cm^{-3}\\) is the radiation energy density of the interstellar radiation field (ISRF) in the solar neighborhood. For a typical interstellar radiation field, \\(U=1\\).\n\n\n\nThe mean wavelength of this radiation is defined as \\[\\begin{equation}\n  \\bar{\\lambda}=\\frac{\\int_{0.091\\,\\mu m}^{20\\,\\mu m}\\lambda u_{\\lambda}d\\lambda}{\\int_{0.091\\,\\mu m}^{20\\,\\mu m}u_{\\lambda}d\\lambda}\n\\end{equation}\\] with \\(\\bar{\\lambda}=1.3\\,\\mu\\)m for a typical interstellar radiation field.\n\n\n\nIn general, the anisotropic degree of a radiation field falls within \\(0&lt;\\gamma\\leq 1\\). For a typical interstellar radiation field, \\(\\gamma \\simeq 0.1\\), where \\(\\gamma \\simeq 0.3\\) in dense core and \\(\\gamma \\simeq 1\\) in star-forming regions.\n\n\n\n\nThe average radiative torque induced by the interaction of an irregular grain (with an effective size \\(a\\)), and an anisotropic radiation field (with an isotropic degree of \\(\\gamma\\)) is \\[\\begin{equation}\n    \\bar{\\Gamma}_{\\rm RAT} = \\pi a^{2} \\gamma (8.64\\times 10^{-13} U)\\left(\\frac{\\bar{\\lambda}}{2\\pi}\\right)\\bar{Q}_{\\Gamma}\n\\end{equation}\\] where \\(\\bar{Q}_{\\Gamma}\\) is the RAT efficiency, which is \\[\\begin{equation}\n    \\bar{Q}_{\\Gamma}=\\left\\{\n    \\begin{array}{l l}\n        2\\left(\\frac{\\bar{\\lambda}}{a}\\right)^{-2.7}   & \\quad \\text{for } a\\leq \\frac{\\bar{\\lambda}}{1.8},\\\\\n        0.4  & \\quad \\text{for } a&gt;\\frac{\\bar{\\lambda}}{1.8}\n    \\end{array}\\right.\n\\end{equation}\\]\n\n\n\nThe RAT accelerates the irregular grain to a finite angular velocity (\\(\\omega_{\\rm RAT}\\)). For a given RAT, this rotation is faster for a lower initial momentum (\\(I_{a}\\)), and experiences deceleration due to gas collisions and reemission from the grain, characterised by the damping timescale (\\(\\tau_{\\rm damp}\\)). The maximum angular velocity with which an irregular grain is gained by RAT is \\[\\begin{equation}\n    \\omega_{\\rm RAT} = \\frac{\\bar{\\Gamma}_{\\rm RAT}\\tau_{\\rm damp}}{I_{a}}\n\\end{equation}\\] The initial momentum of a grain of size \\(a\\) is \\(I_{a}=8\\pi\\rho a^{5}/15\\) with \\(\\rho\\) is the mass density. The damping time scale is \\[\\begin{equation}\n    \\begin{split}\n        \\tau_{\\rm damp} \\simeq 8.3\\times 10^{3}&\\left(\\frac{a}{0.1\\,\\rm \\mu m}\\right)\\left(\\frac{\\rho}{3\\,\\rm g\\,cm^{-3}}\\right) \\\\\n        &\\times \\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2} \\left(\\frac{1}{1+F_{\\rm IR}}\\right) ~~~ {(\\rm yr)}\n    \\end{split}\n\\end{equation}\\] with \\(F_{\\rm IR}\\) is the ratio in timescale between the gas collision and the re-emission damping, which approximates \\[\\begin{equation}\n    F_{\\rm IR} = 0.038\\times U^{2/3}\\left(\\frac{0.1\\,\\rm \\mu m}{a}\\right)\\left(\\frac{10^{3}\\,\\rm cm^{-3}}{n_{\\rm gas}}\\right)\\left(\\frac{10\\,\\rm K}{T_{\\rm gas}}\\right)^{1/2}\n\\end{equation}\\]\nThe alignment of the grain is withstand if its angular velocity is three times higher than the thermal angular velocity (\\((k_{\\rm B}T_{\\rm gas}/I_{a})^{1/2}\\)). Therefore, the minimum grain size that is aligned (referred to as the alignment size \\(a_{\\rm align}\\)) is the solution of the relation \\[\\begin{equation}\n    \\omega_{\\rm RAT}(a_{\\rm align}) = 3\\times \\left(\\frac{15k_{\\rm B}T_{\\rm gas}}{8\\pi \\rho a_{\\rm align}^{5}}\\right)^{1/2}\n\\end{equation}\\]\n\n\n\nDust grain alignment can be characterised by two separate mechanisms: internal alignment (where the grain’s minor axis aligns with its angular momentum) and external alignment (where the angular momentum aligns with a preferred axis, which could be the ambient magnetic field, radiation field, gas flow).\nThe efficiency of internal alignment is qualitatively characterised by \\(Q_{\\rm X}\\), while it is \\(Q_{J}\\) for external alignment. The net grain alignment is called the Rayleigh reduction factor of \\(R(a)=\\langle Q_{X}Q_{J}\\rangle \\simeq f_{\\rm high-J}\\). The alignment efficiency will change from 0 to \\(f_{\\rm high-J}\\) for grain size from smaller to larger than \\(a_{\\rm align}\\). As this transition is a step-function and differs from the smooth change seen from numerical models, a smooth transition will be \\[\\begin{equation}\n    f(a) = f_{\\rm max}\\left[1-e^{-(0.5a/a_{\\rm align})^{3}} \\right]\n\\end{equation}\\] this is called the alignment function with \\(f_{\\rm max}=1\\) for perfect alignment."
  },
  {
    "objectID": "Docs.html#radiative-torque-disruption-rat-d",
    "href": "Docs.html#radiative-torque-disruption-rat-d",
    "title": "Fundamental of DustPOL-py",
    "section": "2 Radiative Torque Disruption (RAT-D)",
    "text": "2 Radiative Torque Disruption (RAT-D)\nA grain rotating at rotational velocity \\(\\omega\\) results in tensile stress \\(S=\\rho \\omega^{2}a^{2}/4\\) on the materials making up the grain. Thus, the maximum rotational velocity that a grain can withstand is: \\[\\begin{equation} \\label{eq:omega_crit}\n    \\omega_{\\rm crit} = \\frac{2}{a}\\left(\\frac{S_{\\rm max}}{\\rho}\\right)^{1/2} \\simeq \\frac{3.6\\times 10^{8}}{a_{-5}}S^{1/2}_{\\rm max,7}\\hat{\\rho}^{-1/2},\n\\end{equation}\\] where \\(S_{\\rm max,7}=S_{\\rm max}/(10^{7} \\rm erg\\,cm^{-3})\\).\nOne can see from Equation of \\(\\Omega_{\\rm RAT}\\) that the stronger the radiation field and the larger the grain size, the faster the rotation of the grain. A strong radiation field can thus generate such a fast rotation that the induced stress on large grains can result in a spontaneous disruption. This disruption mechanism is named as RAT-D. From \\(\\Omega_{\\rm RAT}\\) and \\(\\Omega_{\\rm crit}\\), we can derive the critical size above which grains are disrupted as \\[\\begin{equation}\n    \\left(\\frac{a_{\\rm disr}}{0.1\\,\\rm \\mu m}\\right)^{2.7} \\simeq 5.1\\gamma^{-1}_{0.1}U^{-1/3}\\bar{\\lambda}^{1.7}_{0.5}S^{1/2}_{\\rm max,7},\n\\end{equation}\\] where \\(\\bar{\\lambda}_{0.5} = \\bar{\\lambda}/(0.5\\,\\mu \\rm m)\\)."
  },
  {
    "objectID": "Docs.html#grain-size-distribution",
    "href": "Docs.html#grain-size-distribution",
    "title": "Fundamental of DustPOL-py",
    "section": "3 Grain-size distribution",
    "text": "3 Grain-size distribution\nDust grains are disrupted efficiently (for \\(a\\) greater than \\(a_{\\rm disr}\\)) in stronger radiation fields. The disruption of dust grain by RATD can modify the grain-size distribution. Since only the largest grains are affected by the RATD mechanism, RATD determines the upper limit of the size distribution. The disruption is thus expected to enhance more smaller grains, resulting in a steeper grain size distribution than in the standard ISM.\n\n3.1 MRN-like distribution\nA power-law grain size distribution assumption for both the original large grains and the smaller grains produced by disruption, with a power-law index \\(\\beta\\) as \\[\\begin{equation}\n    \\frac{1}{n_{\\rm H}}\\frac{dn_{\\rm sil,car}}{da}=Ca^{\\beta} \\ \\ \\ \\rm{(a_{\\rm min}\\leq a \\leq a_{\\rm max})},\n\\end{equation}\\] where \\(C\\) is the normalization constants. This value is distinc for different grain compositions, and is determined through the dust-to-gas mass ratio \\(M_{\\rm d/g}\\).\n\n3.1.1 Mixture composition\nIf we consider a combination of silicate and carbonaceous grain, we have \\[\\begin{equation}\n  \\begin{split}\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    \\sum_{\\rm j=sil,car} C_{j}\\rho_{j} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\] where \\(C_{\\rm sil}/C_{\\rm car}\\) is adopted as 1.12, and \\(M_{\\rm d/g}\\) is the dust-to-mass ratio (0.01 for standard ISM).\n\n\n3.1.2 Single composition\nFor the single silicate or Astrodust, the size distribution is simply as \\[\\begin{equation}\n  \\begin{split}\n    C\\rho_{\\rm dust} &= \\frac{(4+\\beta)M_{\\rm d/g} m_{\\rm gas}}{\\frac{4}{3}\\pi (a^{4+\\beta}_{\\rm max}-a^{4+\\beta}_{\\rm min})} ~~~~~~~\\rm{for\\ \\beta \\neq -4} \\\\\n    C\\rho_{\\rm dust} &= \\frac{M_{\\rm d/g}m_{\\rm gas}}{\\frac{4}{3}\\pi(\\ln a_{\\rm max} - \\ln a_{\\rm min})} ~~~\\rm{for\\ \\beta = -4}.\n\\end{split}\n\\end{equation}\\]\n\n\n\n3.2 Others\n\n3.2.1 Weingartner and Draine (WD01)\nThe size distribution comprises of 2 components: log-normal and non log-normal. Please have a look at Weingartner & Draine 2001 for more details.\nFor the single carbonaceous grain (parameters denoted by \\(g\\)) \\[\\begin{equation}\n  \\frac{dn}{da}=\\sum_{j=1}^{2}\\frac{n_{0j}}{a}\\exp{ \\left(-\\frac{[\\ln(a/a_{0j})]^{2}}{2\\sigma^{2}_{j}}\\right) }   + \\frac{C_{g}}{a}\\left(\\frac{a}{a_{t,g}}\\right)^{\\alpha_{g}} F(\\alpha;\\beta_{g},a_{t,g}) \\times\n\\left\\{\n    \\begin{array}{l l}\n        1 & \\quad \\text{for } 3.5Å&lt;a&lt;a_{t,g},\\\\\n        \\exp{\\left[-[(a-a_{t,g}/a_{c,g})]^{3}\\right] }  & \\quad \\text{for } a&gt;a_{t,g}\n    \\end{array}\\right.\n\\end{equation}\\] with \\(n_{0,1}=2.0496e-7\\) and \\(n_{0,2}= 9.6005e-11\\).\nFor the silicate grain (parameters denoted by \\(s\\)) \\[\\begin{equation}\n  \\frac{dn}{da}=\\frac{C_{s}}{a}\\left(\\frac{a}{a_{t,s}}\\right)^{\\alpha_{s}} F(\\alpha;\\beta_{s},a_{t,s}) \\times\n\\left\\{\n    \\begin{array}{l l}\n        1 & \\quad \\text{for } 3.5Å&lt;a&lt;a_{t,s},\\\\\n        \\exp{\\left[-[(a-a_{t,s}/a_{c,s})]^{3}\\right] }  & \\quad \\text{for } a&gt;a_{t,s}\n    \\end{array}\\right.\n\\end{equation}\\]\nThe curvature of the non log-normal component is given as \\[\\begin{equation}\n  F(\\alpha;\\beta, a_{t}) = \\left\\{\n    \\begin{array}{l l}\n        1 + \\beta a/a_{t} & \\quad \\text{for } \\beta&gt;0,\\\\\n        (1-\\beta a/a_{t})^{-1}  & \\quad \\text{for } \\beta&lt;0\n    \\end{array}\\right.\n\\end{equation}\\]\nOnce see that there are 5 adjustable parameters (\\(C_{g}\\), \\(a_{t,g}\\), \\(a_{c,g}\\), \\(\\alpha_{g}\\), \\(\\beta_{g}\\)) for the grain size distribution of carbonaceous grain, while there are 5 parameters (\\(C_{s}\\), \\(a_{t,s}\\), \\(a_{c,s}\\), \\(\\alpha_{s}\\), \\(\\beta_{s}\\)) for silicate grains. For the best values, please see Table 1 in Weingartner & Draine 2001.\n\n\n3.2.2 Draine and Li (DL07)\nThe form of the grain size distribution is similar to the WD, but with the correction for the log-normal component. See Draine & Li 2007 for more information.\nIn principle, the differents or the carbonaceous, \\[\\begin{equation}\n  n_{0j} = \\frac{3}{(2\\pi)^{3/2}}\\frac{\\exp(4.5\\sigma^{2}_{j})}{1+\\erf(x_{j})}\\frac{m_{C}}{\\rho_{C}a^{3}_{Mj}\\sigma_{j}}b_{j} ~~~{\\rm with}~~~ x_{j}=\\frac{\\ln(a_{\\rm peak,j}/a_{\\rm min})}{\\sqrt{2}\\sigma_{j}}\n\\end{equation}\\] where \\(\\rho_{C}\\) is the carbon mass density, \\(b_{C}\\) is the total C abundance (per H nucleus) in the log-normal populations, \\(m_{C}\\) is the mass of a carbon atom, and \\(a_{\\rm peak,j} \\equiv a_{0j}\\exp(3\\sigma^{2}_{j})\\) is the location of the peak in the mass distribution (\\(\\approx a^{3}dn/dlna\\)).\n\n\n3.2.3 Astrodust (HD23)\nThe log-normal and non-log normal components for the Astrodust are \\[\\begin{equation}\n  \\frac{dn}{da} = \\frac{B_{\\rm Ad}}{a}\\exp\\left(-\\frac{[\\ln(a/a_{0,\\rm Ad})]^{2}}{2\\sigma^{2}_{\\rm Ad}}\\right) + \\frac{A_{0}}{a}\\exp\\left(\\sum_{i=1}^{5}A_{i}\\left[\\ln\\left(\\frac{a}{Å}\\right)\\right]^{i}\\right)\n\\end{equation}\\] where the parameters are given in Table 1 in Hensley & Draine 2023."
  },
  {
    "objectID": "Tutorials.html#run-1d-model",
    "href": "Tutorials.html#run-1d-model",
    "title": "Setup and execute DustPOL-py",
    "section": "4 Run 1D model",
    "text": "4 Run 1D model"
  },
  {
    "objectID": "Tutorials.html#run-a-1d-model",
    "href": "Tutorials.html#run-a-1d-model",
    "title": "Setup and execute DustPOL-py",
    "section": "4 Run a 1D model",
    "text": "4 Run a 1D model\n\n\n\n\n\nFigure 3: Coordinate system of the isolated cloud on the {}-plane with the \\({\\hat{z}}\\) direction towards the observer. The position in the plane of the sky is defined by \\(r_{0}\\). Each line of sight \\(\\hat{s}\\) corresponds to a distinct visual extinction \\(A_{\\rm V}\\), calculated due to the gas volume density profile along this direction.\n\n\n\n\nFor the recent version of model, an isolated cloud with a spherical geometry is adopted. To utilize this module, you must provide the profile of the gas volume density. For an example, let compute the polarization degree along a line of sight through a peak gas density. In the coordinate system defined in Figure 3, \\(r_{0}=0\\). With this option, addition physical parameters are required\n\n\n\n\n\n\n\n\nParameter\nExample Value\nComments\n\n\n\n\np\n2\npower-index for profiling gas volume density (n~r^-p)\n\n\nrin\n1700.\n[au]: inner radius\n\n\nrout\n1.248e5\n[au]: outer radius\n\n\nrflat\n9000.\n[au]: flat radius (r&lt;r0: n=n0=const.), while r&gt;r0: n~r^{-p}\n\n\nnsample\n70\nnumber of points sampling from rin -&gt; rout\n\n\n\nThese parameters must be adjusted for different target.\n\n\nisoCloud_los\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL\nexe = DustPOL('data/input_template.dustpol')\nexe.isoCloud_los(0.0,progress=True,save_output=True)\n\nAs we can recognize, for other line of sight, just simply pass the corresponding value of \\(r_{0}\\). The results can be written out when it needs. To monitor the variations of the physical parameters, set progress=False"
  },
  {
    "objectID": "Tutorials.html#run-a-2d-model",
    "href": "Tutorials.html#run-a-2d-model",
    "title": "Setup and execute DustPOL-py",
    "section": "5 Run a 2D model",
    "text": "5 Run a 2D model\nFor an isolated spherical cloud/core illustrated in Figure 3, one can model the degree of dust polarization on the plane-of-sky by varying the values of \\(r_{0}\\) from center (\\(0\\)) to the edge of the cloud/core (\\(r_{\\rm out}\\)). Typically, this task time consumption, thust we adopt the concurrency technique in python for parallelization. The setup is adjustable in the physical parameters input file. In DustPOL-py, this sight line coordinate is automically varied within the setup of the model, so we can just call this module\n\n\nisoCloud_pos\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL\nexe = DustPOL('data/input_template.dustpol')\nexe.isoCloud_pos()\n\nThe outputs are automically written out. See the Examples/Scripts for an example."
  },
  {
    "objectID": "Example_scripts.html#d-model",
    "href": "Example_scripts.html#d-model",
    "title": "Examples in detail for using DustPOL-py",
    "section": "1 1D model",
    "text": "1 1D model"
  },
  {
    "objectID": "Example_scripts.html#dustpol-py-1d-model",
    "href": "Example_scripts.html#dustpol-py-1d-model",
    "title": "Examples in detail for using DustPOL-py",
    "section": "2 DustPOL-py: 1D model",
    "text": "2 DustPOL-py: 1D model\nLet’s take an example with a specific set of the physical parameters as in the ‘input_template.dustpol’, we compute the dust polarizations with the astrodust composition (single composition) at three different sight lines: through the center, 0.1pc and 0.3pc from the center. The outputs will be written out with the following commands.\n\n\nisoCloud_los\n\nimport numpy as np\nfrom DustPOL_py import DustPOL, constants\n\n##call DustPOL with the desired physical parameters\nexe = DustPOL('data/input_template.dustpol')\namax=exe.amax*1e4\n\n##distance of LOSs from the center\nlos_range = np.array([0.0,0.1,0.3])*constants.pc\n\n##computing degree of dust polarization along these LOSs\nfor los in los_range:\n    exe.isoCloud_los(\n                    los,\n                    progress=True,\n                    save_output=True,\n                    filename_output=f\"pol_r0={los/constants.pc:.2f}pc_amax={amax:.2f}\"\n                    )\n\nThere are many ways to plot and analyse the output fiels in the ascii format. DustPOL-py provide a simple build-in module, namely analysis for plotting the results.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL, analysis\n\nexe = DustPOL('data/input_template.dustpol')\ndust_type=exe.dust_type\namax     =exe.amax*1e4\nparams={};params['dust_type']=dust_type;params['amax']=amax\n\noutput_abs=[\n            f\"output/pol_r0={los:.2f}pc_amax={amax:.2f}_abs.dat\" \n            for los in np.array([0.0,0.1,0.3])\n            ]\noutput_emi=[\n            f\"output/pol_r0={los:.2f}pc_amax={amax:.2f}_emi.dat\" \n            for los in np.array([0.0,0.1,0.3])\n            ]\n\nfig_abs,ax_abs=plt.subplots(figsize=(9,3))\nfig_emi,ax_emi=plt.subplots(figsize=(9,3))\nanalysis.plot_pl(output_abs,params,color='k',ax=ax_abs)\nanalysis.plot_pl(output_emi,params,color='k',ax=ax_emi)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimilarly, we can compare the spectra for different physical parameters, e.g., amax.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import DustPOL, analysis\n\nexe = DustPOL('data/input_template.dustpol')\ndust_type=exe.dust_type\n\nparams={};params['dust_type']=dust_type;params['amax']=[0.25,0.5]\n\noutput_abs=[\n            f\"output/pol_r0=0.00pc_amax={amax:.2f}_abs.dat\" \n            for amax in params['amax']\n            ]\noutput_emi=[\n            f\"output/pol_r0=0.00pc_amax={amax:.2f}_emi.dat\" \n            for amax in params['amax']\n            ]\n\nfig_abs,ax_abs=plt.subplots(figsize=(9,3))\nfig_emi,ax_emi=plt.subplots(figsize=(9,3))\nanalysis.plot_pl(output_abs,params,color='k',ax=ax_abs)\nanalysis.plot_pl(output_emi,params,color='k',ax=ax_emi)"
  },
  {
    "objectID": "Example_scripts.html#dustpol-py-isolated-cloud",
    "href": "Example_scripts.html#dustpol-py-isolated-cloud",
    "title": "Examples in detail for using DustPOL-py",
    "section": "3 DustPOL-py: isolated cloud",
    "text": "3 DustPOL-py: isolated cloud\n\n3.1 Checking key physical parameters\nIf you want to check or get insights the results, we can monitor some key physical variables (alignment size, mean wavelength of radiation field, …)"
  },
  {
    "objectID": "Example_scripts.html#dustpol-py-0d-model",
    "href": "Example_scripts.html#dustpol-py-0d-model",
    "title": "Examples in detail for using DustPOL-py",
    "section": "",
    "text": "The input parameters (e.g. ngas, U or Tdust) can be adopted from observations, thus it can be useful to model large physical scales with different physical properties. The basic tutorial on setting and execute this 0D model is introduced in Tutorials."
  },
  {
    "objectID": "Example_scripts.html#dustpol-py-isolate-cloud",
    "href": "Example_scripts.html#dustpol-py-isolate-cloud",
    "title": "Examples in detail for using DustPOL-py",
    "section": "2 DustPOL-py: isolate cloud",
    "text": "2 DustPOL-py: isolate cloud\n\n2.1 Build a spherical isolated cloud\nLet’s take an example with a specific set of the physical parameters as in the ‘input_template.dustpol’.\nThe gas volume density is followed \\[\\begin{equation}\n    n_{\\rm gas} = n0 ~~~{\\rm for}~~~ r&lt;r_{\\rm flat}, ~~~{\\rm while}~~~ n_{\\rm gas}=n0\\times \\left(\\frac{r_{\\rm flat}}{r}\\right)^{-\\alpha}\n\\end{equation}\\]\nThe gas column density (\\(N_{\\rm gas}\\)) integrated from the center to the position \\(r\\) in the envelope along the radial distance, and the corresponding visual extinction (\\(A^{\\rm outward}_{V}\\)) are \\[\\begin{equation}\n    \\begin{split}\n        N_{\\rm gas}(r) &= \\int^{r}_{0} n_{\\rm gas}(r')dr' ~~~ {\\rm (cm^{-2})}\\\\\n        A^{\\rm outward}_{\\rm V} &= \\left(\\frac{N_{\\rm gas}}{5.8\\times 10^{21}\\,\\rm cm^{-2}}\\right)R_{\\rm V} ~~~ {\\rm (mag.)}\n    \\end{split}\n\\end{equation}\\] where \\(R_{\\rm V}\\) is the total-to-selective extinction ratio. \\(R_{\\rm V}=3.1\\) for a typical aISRF. The visual extinction (\\(A^{\\rm ext}_{\\rm V}\\)) measured from the envelope to the center is expressed as \\[\\begin{equation}\n    \\begin{split}\n    A^{\\rm ext}_{\\rm V} &= A^{\\rm outward}_{\\rm V}(r\\gg r_{\\rm flat}) - A^{\\rm outward}_{\\rm V}(r) \\\\\n    &= 10.3\\left(\\frac{n_{0}}{10^{8}\\,\\rm cm^{-3}}\\right)\\left(\\frac{r_{\\rm flat}}{10\\,\\rm au}\\right)\\left(\\frac{R_{\\rm V}}{4}\\right) \\times \\left\\{\n    \\begin{array}{l l}\n        \\left(\\frac{\\alpha}{\\alpha-1} - \\frac{r}{r_{\\rm flat}}\\right) & \\quad {\\rm ~for~} r\\le r_{\\rm flat},\\\\\n        \\frac{1}{\\alpha-1}\\left(\\frac{r}{r_{\\rm flat}}\\right)^{1-\\alpha} & \\quad {\\rm ~for~} r&gt;r_{\\rm flat},\n    \\end{array}\\right.\n    \\end{split}\n\\end{equation}\\] It is worth noticing that this visual extinction differs from the line of sight \\(A_{\\rm V}\\).\nThe cloud has no central radiation source, and embeded in a radiation field. The radiation field from the cloud’s surface is then attenuated radially toward the center. The dimensionless radiation intensity (weighted to the aISRF) is \\[\\begin{equation}\n     U(A^{\\rm ext}_{\\rm V}) = \\frac{\\int^{\\infty}_{0}u_{\\lambda}(A^{\\rm ext}_{\\rm v})d\\lambda}{8.64\\times 10^{-13}\\,\\rm erg\\,cm^{-3}} = \\frac{U_{0}}{1+0.42\\times \\left(A^{\\rm ext}_{\\rm V}\\right)^{1.22}}\n\\end{equation}\\] with \\(U_{0}\\) the radiation intensity at the surface (\\(U=1\\) for a typical aISRF).\nThe mean wavelength of the aISRF is also parameterized as \\[\\begin{equation}\n    \\bar{\\lambda}(A^{\\rm ext}_{\\rm V}) = \\frac{\\int_{0}^{\\infty} \\lambda u_{\\lambda}(A^{\\rm ext}_{\\rm V})d\\lambda}{\\int_{0}^{\\infty} u_{\\lambda}(A^{\\rm ext}_{\\rm V})d\\lambda} = \\bar{\\lambda}_{0}\\left[1+0.27\\times \\left(A^{\\rm ext}_{\\rm V}\\right)^{0.76}\\right]\n\\end{equation}\\] where \\(\\bar{\\lambda}_{0}\\) is the mean wavelength of the ISRF at the cloud surface, and for the typical aISRF, \\(\\bar{\\lambda}_{0}=1.3\\,\\mu\\)m.\nIn the dense and cold environments like starless cores, gas and dust are in thermal equilibrium, i..e, \\(T_{\\rm gas}=T_{\\rm dust}\\). Therefore, one can determine the gas and dust temperatures using the radiation strength \\(U\\) as \\[\\begin{equation}\n    T_{\\rm d}(A^{\\rm ext}_{\\rm V}) = T_{\\rm gas}(A^{\\rm ext}_{\\rm V}) = 16.4\\,{\\rm K}\\times \\left(\\frac{a}{0.1\\,\\mu m}\\right)^{-1/15}\\left[U\\left(A^{\\rm ext}_{\\rm V}\\right)\\right]^{1/6}.\n\\end{equation}\\]\n\n\n2.2 Parameter adjustments\nTo profile this cloud, there are four main input physical parameters that must be corrected: n0, rflat,rout and $\\alpha$. To make a proper adjustment, we follows these steps\n-- we vary these parameters from the input file\n-- compute for the visual extinction or gas colume density\n-- compare to observations (if available)\nWith DustPOL-py, we can estimate the map of visual extinction as follows. The shown map is seen to be similar with observations. Note that high-performance-computation is embedded\n\n\nget_Av_map\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom DustPOL_py import DustPOL, isoCloud_profile, constants\n\n##Constants\npc = constants.pc\n\n##GLOBAL ARGUMENTS\nargs=DustPOL('data/input_template.dustpol')\nmodel=isoCloud_profile()\n[x,y,z],_=model.isoCloud_model(args)\n\n##Call the get_map_Av rountine\nAv_los = model.get_map_Av(args)\n\n## Plot the computed Av map\nfig,ax=plt.subplots(figsize=(9,9))\nim = plt.imshow(\n                Av_los,\n                interpolation='bilinear',\n                origin='lower',\n                cmap='magma',\n                norm=LogNorm(vmin=1,vmax=50),\n                extent=[x[0]/pc,x[-1]/pc,y[0]/pc,y[-1]/pc]\n                )\nt=[1,10,20,30,40,50]\ncbar=plt.colorbar(im,ax=ax,ticks=t,format='%.0f',shrink=0.8)\ncbar.set_label('$\\\\rm A^{LOS}_{V}\\\\, (mag.)$')\nplt.xlabel('$\\\\rm x/pc$')\nplt.ylabel('$\\\\rm y/pc$')\nX, Y = np.meshgrid(x/pc, y/pc)\nCS = ax.contour(X, Y, Av_los,levels=[1,3,5,10,20,50],colors='white')\nax.clabel(CS, inline=True, fmt='%.0f', fontsize=15)\nplt.xlim([-0.5,0.5])\nplt.ylim([-0.5,0.5])\nplt.show()\n\n\n\n2.3 Compute the degree of dust polarization\n\n2.3.1 Certain line of sights\nAfter adjusting some important physical parameters, we can perform calculation for the results. We might be interested in certain line of sights, which can be done as\n\n\nisoCloud_los\n\nimport numpy as np\nfrom DustPOL_py import DustPOL, constants\n\n##call DustPOL with the desired physical parameters\nexe = DustPOL('data/input_template.dustpol')\namax=exe.amax*1e4\n\n##distance of LOSs from the center\nlos_range = np.array([0.0,0.1,0.3])*constants.pc\n\n##computing degree of dust polarization along these LOSs\nfor los in los_range:\n    exe.isoCloud_los(\n                    los,\n                    progress=True,\n                    save_output=True,\n                    filename_output=f\"pol_r0={los/constants.pc:.2f}pc_amax={amax:.2f}\"\n                    )\n\nDustPOL-py returns output for futher analysis. There are many ways to plot and analyse the output fiels in the ascii format. DustPOL-py provide a simple build-in module, namely analysis for plotting the results.\nThis is an example how to use analysis to plot the polarization spectra along different LOS.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import analysis\n\noutput_abs=[\n            f\"output/pol_r0={los:.2f}pc_amax=0.25_abs.dat\" \n            for los in np.array([0.0,0.1,0.3])\n            ]\noutput_emi=[\n            f\"output/pol_r0={los:.2f}pc_amax=0.25_emi.dat\" \n            for los in np.array([0.0,0.1,0.3])\n            ]\n\nfig_abs,ax_abs=plt.subplots(figsize=(9,3))\nfig_emi,ax_emi=plt.subplots(figsize=(9,3))\nanalysis.plot_pl(output_abs,color='k',ax=ax_abs)\nanalysis.plot_pl(output_emi,color='k',ax=ax_emi)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.3.2 Entire cloud on plane of sky\nWe recommend to set parallel=True in the input file for a high-performance calculation process. With a 8-core CPU, DustPOL-py can take about 2 minutes to compute 1240 models.\n\n\nisoCloud_pos\n\nfrom DustPOL_py import DustPOL\n\n##call DustPOL with the desired physical parameters\nexe = DustPOL('data/input_template.dustpol')\n\n##computing degree of dust polarization on POS for entire cloud\nexe.isoCloud_pos()\n\nOn the basis, this module returns a single file containing data along all LOS through the center to the edge. This is an example to plot the polarization spectra for some preferable \\(A_{\\rm V}\\)\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import analysis\n\nfig_abs,ax_abs=plt.subplots(figsize=(9,3))\nanalysis.plot_pl(\n                'output/p_amax=0.25_abs.dat',\n                av_range=[1,5,10,20],\n                color='k',ax=ax_abs\n                )\n\nfig_emi,ax_emi=plt.subplots(figsize=(9,3))\nanalysis.plot_pl(\n                'output/p_amax=0.25_emi.dat',\n                av_range=[1,5,10,20],\n                color='k',ax=ax_emi\n                )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is an example to plot the \\(\\lambda_{\\rm max}\\) at the peak starlight polarization as a function of \\(A_{\\rm V}\\)\n\nimport matplotlib.pyplot as plt\nfrom DustPOL_py import analysis\n\nfig_abs,ax_abs=plt.subplots(figsize=(9,3))\nanalysis.plot_lamav(\n                ['output/p_amax=0.25_abs.dat',\n                'output/p_amax=0.30_abs.dat',\n                'output/p_amax=0.50_abs.dat'],\n                color='k',ax=ax_abs\n                )\n\n\n\n\n\n\n\n\nAt a specific wavelength, the relations of \\(p_{\\rm ext}/A_{\\rm V}\\) vs. \\(A_{\\rm V}\\) for starlight polarization and \\(p_{\\rm em}\\) vs. \\(A_{\\rm V}\\) (\\(p_{\\rm em}\\) vs. Stokes-I) for thermal dust polarization.\n\n\n\nstarlight polarization\n\nThis is an example to compare the \\(p_{\\rm ext}/A_{\\rm V}\\) vs. \\(A_{\\rm V}\\) for amax=0.25,0.3,0.5 micron at 0.65\\(\\,\\mu\\)m. If we want to show the value of \\(A_{\\rm V}\\) above which the \\(p_{\\rm ext}/A_{\\rm V}\\) drops with a slope of \\(-1\\), please set show_break=True, and get_info=True to get the slopes’ values\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nfrom DustPOL_py import analysis\n\n# Set global font size\nrcParams['font.size'] = 14\n\namax_range=[0.25,0.3,0.5]\ndatafiles = [\n            f'output/p_amax={amax:.2f}_abs.dat' \n            for amax in amax_range\n            ]\n\nfig,ax=plt.subplots(figsize=(4,6))\nanalysis.plot_pav(\n                datafiles,\n                wavelength=0.65,\n                color='k',\n                show_break=True,\n                get_info=True,\n                ax=ax\n                )\n                \nfig,ax=plt.subplots(figsize=(4,6))\nanalysis.plot_pav(\n                datafiles,\n                wavelength=1.65,\n                color='k',\n                show_break=True,\n                get_info=True,\n                ax=ax\n                )\n\n--------------Fitting information----------------\nFitting function:  1\n0.755629645383476 - 0.127377358540819*x\nFitting function:  2\n1.55606374163488 - 1.10797287584798*x\n--------------Fitting information----------------\nFitting function:  1\n0.732253725464658 - 0.127422351617074*x\nFitting function:  2\n1.6052533895017 - 1.09879891736522*x\n--------------Fitting information----------------\nFitting function:  1\n0.663190916498778 - 0.140534673644743*x\nFitting function:  2\n1.54022416691999 - 1.05678547910654*x\n\n\n\n\n\n\n\n\n\n--------------Fitting information----------------\nFitting function:  1\n-0.114254089388783*x - 0.0258129104488481\nFitting function:  2\n0.835560121266196 - 1.11676957791942*x\n--------------Fitting information----------------\nFitting function:  1\n0.0724294920178201 - 0.106223694963648*x\nFitting function:  2\n1.07931181562722 - 1.12309139564573*x\n--------------Fitting information----------------\nFitting function:  1\n0.371513950120255 - 0.0839797664618789*x\nFitting function:  2\n1.58319264019005 - 1.09952931632782*x\n\n\n\n\n\n\n\n\n\n\n\nThermal dust polarization\n\nThis is an example to compare the \\(p_{\\rm em}\\) vs. \\(A_{\\rm V}\\) for amax=0.25,0.3,0.5 micron at 850\\(\\,\\mu\\)m. Similarly to the starlight polarization, set show_break=True to identify when \\(p_{\\rm em}\\) drops with a slope of \\(-1\\). Similarly, please set show_break=True, and get_info=True to get the slopes’ values\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nfrom DustPOL_py import analysis\n\n# Set global font size\nrcParams['font.size'] = 14\n\namax_range=[0.25,0.3,0.5]\ndatafiles = [\n            f'output/p_amax={amax:.2f}_emi.dat' \n            for amax in amax_range\n            ]\n\nfig,ax=plt.subplots(figsize=(4,6))\nanalysis.plot_pav(\n                datafiles,\n                wavelength=850,\n                color='k',\n                show_break=True,\n                get_info=True,\n                ax=ax\n                )\n\n--------------Fitting information----------------\nFitting function:  1\n1.03478266325705 - 0.0637559017547389*x\nFitting function:  2\n1.15188160337447 - 0.363544884803161*x\nFitting function:  3\n1.59022419480387 - 0.895890755850797*x\n--------------Fitting information----------------\nFitting function:  1\n1.0830278124027 - 0.0647883468132064*x\nFitting function:  2\n1.23616354446145 - 0.368285063681195*x\nFitting function:  3\n1.730837898394 - 0.888738634309728*x\n--------------Fitting information----------------\nFitting function:  1\n1.18349929670071 - 0.0573175957329616*x\nFitting function:  2\n1.36133288665519 - 0.329022250015283*x\nFitting function:  3\n1.98545809472883 - 0.862029952350762*x\n\n\n\n\n\n\n\n\n\nThis is an example to compare the \\(p_{\\rm em}\\) vs. \\(I\\) for amax=0.25,0.3,0.5 micron at 850\\(\\,\\mu\\)m. Similarly to the starlight polarization, set show_break=True to identify when \\(p_{\\rm em}\\) drops with a slope of \\(-1\\)\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nfrom DustPOL_py import analysis\n\n# Set global font size\nrcParams['font.size'] = 14\n\namax_range=[0.25,0.3,0.5]\ndatafiles = [\n            f'output/p_amax={amax:.2f}_emi.dat' \n            for amax in amax_range\n            ]\n                \nfig,ax=plt.subplots(figsize=(4,6))\nanalysis.plot_pI(\n                datafiles,\n                wavelength=850,\n                color='k',\n                show_break=True,\n                get_info=True,\n                ax=ax\n                )\n\n--------------Fitting information----------------\nFitting function:  1\n0.812106381122218 - 0.143508489125787*x\nFitting function:  2\n0.0299006593492451 - 1.07555460897357*x\n--------------Fitting information----------------\nFitting function:  1\n0.867018600580613 - 0.139634518679176*x\nFitting function:  2\n0.145328481836346 - 1.07541836987421*x\n--------------Fitting information----------------\nFitting function:  1\n1.01698884908505 - 0.109587829299367*x\nFitting function:  2\n0.446767304349431 - 1.01615035998849*x"
  },
  {
    "objectID": "Example_scripts.html#monitoring-key-physical-parameters",
    "href": "Example_scripts.html#monitoring-key-physical-parameters",
    "title": "Examples in detail for using DustPOL-py",
    "section": "3 Monitoring key physical parameters",
    "text": "3 Monitoring key physical parameters\nIf you want to check or get insights the results, we can monitor some key physical variables (alignment size, mean wavelength of radiation field, …)"
  },
  {
    "objectID": "Example_scripts.html#monitor-key-physical-parameters",
    "href": "Example_scripts.html#monitor-key-physical-parameters",
    "title": "Examples in detail for using DustPOL-py",
    "section": "3 Monitor key physical parameters",
    "text": "3 Monitor key physical parameters\nIf you want to check or get insights the results, we can monitor some key physical variables (alignment size, mean wavelength of radiation field, …). In addition to the map of \\(A_{\\rm V}\\) shown above, we can shows the map of alignmnent size (\\(a_{\\rm align}\\)), dust temperature (\\(T_{\\rm dust}\\)) and mean wavelength of the radiation field (\\(\\bar{\\lambda}\\)) as\nMap of Alignment Size\n\n\nAlignment Size\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom DustPOL_py import DustPOL, isoCloud_profile, constants\n\n##Constants\npc = constants.pc\n\n##GLOBAL ARGUMENTS\nargs=DustPOL('data/input_template.dustpol')\nmodel=isoCloud_profile()\n[x,y,z],_=model.isoCloud_model(args)\n\n##Call the get_map_Av rountine\nalign_=model.get_map_align(args)\n\n## Plot the computed align map\nfig,ax=plt.subplots(figsize=(9,9))\nim = plt.imshow(\n                align_,\n                interpolation='bilinear',\n                origin='lower',\n                cmap='magma',\n                norm=LogNorm(),\n                extent=[x[0]/pc,x[-1]/pc,z[0]/pc,z[-1]/pc]\n                )\nt=[0.05,0.1,0.2,0.5,1.0]\ncbar=plt.colorbar(im,ax=ax,ticks=t,format='%.2f',shrink=0.8)\ncbar.set_label('$\\\\rm a_{align}\\\\, (\\\\mu m)$')\nplt.xlabel('$\\\\rm x/pc$')\nplt.ylabel('$\\\\rm z/pc$')\nX, Y = np.meshgrid(x/pc, z/pc)\nCS = ax.contour(X, Z, align_*1e4,levels=[0.05,0.06,0.08,0.15,0.3],colors='white')\nax.clabel(CS, inline=True, fmt='%.0f', fontsize=15)\nplt.xlim([-0.5,0.5])\nplt.ylim([-0.5,0.5])\nplt.show()\n\nMap of Dust temperature\n\n\nDust temperature\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom DustPOL_py import DustPOL, isoCloud_profile, constants\n\n##Constants\npc = constants.pc\n\n##GLOBAL ARGUMENTS\nargs=DustPOL('data/input_template.dustpol')\nmodel=isoCloud_profile()\n[x,y,z],_=model.isoCloud_model(args)\n\n##Call the get_map_Tdust rountine\nTd_=model.get_map_Tdust(args)\n\n## Plot the computed Td map\nfig,ax=plt.subplots(figsize=(9,9))\nim = plt.imshow(\n                Td_,\n                interpolation='bilinear',\n                origin='lower',\n                cmap='magma',\n                norm=LogNorm(),\n                extent=[x[0]/pc,x[-1]/pc,z[0]/pc,z[-1]/pc]\n                )\ncbar=plt.colorbar(im,ax=ax,format='%.2f',shrink=0.8)\ncbar.set_label('$\\\\rm T_{dust}\\\\, (K)$')\nplt.xlabel('$\\\\rm x/pc$')\nplt.ylabel('$\\\\rm z/pc$')\nplt.xlim([-0.5,0.5])\nplt.ylim([-0.5,0.5])\nplt.show()\n\nMap of mean wavelength\n\n\nMean wavelength\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\nfrom DustPOL_py import DustPOL, isoCloud_profile, constants\n\n##Constants\npc = constants.pc\n\n##GLOBAL ARGUMENTS\nargs=DustPOL('data/input_template.dustpol')\nmodel=isoCloud_profile()\n[x,y,z],_=model.isoCloud_model(args)\n\n##Call the get_map_mean_wavelength rountine\nmean_wave_=model.get_map_mean_wavelength(args)\n\n## Plot the computed mean_wave map\nfig,ax=plt.subplots(figsize=(9,9))\nim = plt.imshow(\n                mean_wave_,\n                interpolation='bilinear',\n                origin='lower',\n                cmap='magma',\n                norm=LogNorm(),\n                extent=[x[0]/pc,x[-1]/pc,z[0]/pc,z[-1]/pc]\n                )\ncbar=plt.colorbar(im,ax=ax,format='%.2f',shrink=0.8)\ncbar.set_label('$\\\\rm T_{dust}\\\\, (\\\\mu m)$')\nplt.xlabel('$\\\\rm x/pc$')\nplt.ylabel('$\\\\rm z/pc$')\nplt.xlim([-0.5,0.5])\nplt.ylim([-0.5,0.5])\nplt.show()"
  },
  {
    "objectID": "Example_scripts.html#starlight-polarization",
    "href": "Example_scripts.html#starlight-polarization",
    "title": "Examples in detail for using DustPOL-py",
    "section": "3 starlight polarization",
    "text": "3 starlight polarization\nThis is an example to compare the \\(p_{\\rm ext}/A_{\\rm V}\\) vs. \\(A_{\\rm V}\\) for amax=0.25,0.3,0.5 micron at 0.65\\(\\,\\mu\\)m. If we want to show the value of \\(A_{\\rm V}\\) above which the \\(p_{\\rm ext}/A_{\\rm V}\\) drops with a slope of \\(-1\\), please set show_break=True\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nfrom DustPOL_py import analysis\n\n# Set global font size\nrcParams['font.size'] = 14\n\namax_range=[0.25,0.3,0.5]\ndatafiles = [f'output/p_amax={amax:.2f}_abs.dat' for amax in amax_range]\n\nfig,ax=plt.subplots(figsize=(4,6))\nanalysis.plot_pav(\n                datafiles,\n                wavelength=0.65,\n                color='k',show_break=True,ax=ax\n                )"
  },
  {
    "objectID": "Applications.html#starless-core-pipe-109",
    "href": "Applications.html#starless-core-pipe-109",
    "title": "Applications of DustPOL-py",
    "section": "1 Starless core Pipe-109",
    "text": "1 Starless core Pipe-109\nStarless cores are an ideal target for our study because of the high density where grain growth is expected to occur, and grain alignment is still significant. Numerous starless cores have been observed in multiple wavelengths from starlight polarisation in optical and near-infrared (Near-IR) to thermal dust polarisation in the submillimeter (submillimeter) range. These observations usually report a drop of \\(p(\\%)\\) from the cloud surface to the core via the relation to the total intensity (\\(I\\)) or visual extinction (\\(A_{\\rm V}\\)) as a power law (\\(p(\\%) \\sim I^{-\\alpha}\\)). This depolarisation is known as the polarisation hole. In some cases, this slope \\(\\alpha\\) approaches \\(1\\) in proximity to the centre of the core.\n\n \n\nFigure 3: (left): The starless core 109 in the Pipe Nebula, known as Pipe-109. The background is the visual extinction. The white segments are the polarisation in optical (0.65\\(\\,\\mu\\)m), the gray segments are are the polarisation in near-infrared (1.65\\(\\,\\mu\\)m), and the black segmnets are the polarisation in sub-millimeter (850\\(\\,\\mu\\)m). (Right): The comparison of DustPOL-py predictions (lines) to these observations (dots). These predictions reveal the grain growth from outside to inside of the starless core. This work is in a series of Grain Alignment Physics and grain Evolution using dust POLarization (GRAPE-POL), led by Dr. Le N. Tram. Observational data is taken from Alves et al. 2014"
  },
  {
    "objectID": "Applications.html#musca-filament",
    "href": "Applications.html#musca-filament",
    "title": "Applications of DustPOL-py",
    "section": "2 Musca filament",
    "text": "2 Musca filament\nMusca is located at a distance of \\(170\\,\\)pc. The filament is in its early evolutionary stage and lacks active star formation. Musca is known for being an isothermal filament in hydrostatic equilibrium and already fragmented; new stars can be formed in the near future. In this work, we use \\(\\it{Planck}\\) polarization data at 850\\(\\,\\mu\\)m, showing that the degree of polarization (\\(p(\\%)\\)) is lower toward the spike of the filament (green dots in Figure 1). The DustPOL-py model well reproduce this decline of \\(p(\\%)\\) due to the loss of grain alignment efficiency, because of higher gas density and lower radiation intensity at the filament’s spike.\n\n\n\nFigure 1: Series of B-fields And dust in interstelLar fiLAments using Dust POLarization (BALLAD-POL), led by Ms. Nguyen B. Ngoc. For more details, please have a look at this article"
  },
  {
    "objectID": "Applications.html#ophiuchus-dark-cloud-oph-a",
    "href": "Applications.html#ophiuchus-dark-cloud-oph-a",
    "title": "Applications of DustPOL-py",
    "section": "3 Ophiuchus dark cloud (Oph-A)",
    "text": "3 Ophiuchus dark cloud (Oph-A)\n\\(\\rho\\) Oph-A is a molecular cloud in one of the closest dark cloud complexes and star-forming regions, \\(\\rho\\) Ophiuchi. The distance to this complex is reported to be ∼120–160 pc. This region is significantly influenced by high-energy radiation from a nearby high-mass Oph-S1 star, which is a B association star. Among several dark cloud cores in \\(\\rho\\) Ophiuchi, Oph-A is one of the best laboratories to understand the multiband dust polarization in the context of highenergy radiation giving us an opportunity to investigate RAT in detail. Using the SOFIA/HAWC+ polarimetric data at 89 and 154\\(\\,\\mu\\)m, we find that the degree of polarization (\\(p(\\%)\\)) of thermal dust emission first increases with the grain temperature and then decreases once the grain temperature exceeds \\(\\simeq 25–32\\,\\)K. The latter trend differs from the prediction of the popular RAdiative Torques (RATs) alignment theory, which implies a monotonic increase of the polarization fraction with the grain temperature. The DustPOL-py results could successfully reproduce both the rising and declining trends of the observational data. Moreover, we show that the alignment of only silicate grains or a mixture of silicate–carbon grains within a composite structure can reproduce the observational trends.\n\n\n\nFigure 2: DustPOL-py vs. SOFIA/HAWC+ observations, led by Dr. Le N. Tram. For more details, please have a look at this article"
  },
  {
    "objectID": "Applications.html#orion-molecular-cloud",
    "href": "Applications.html#orion-molecular-cloud",
    "title": "Applications of DustPOL-py",
    "section": "4 Orion Molecular Cloud",
    "text": "4 Orion Molecular Cloud\nLocated at a distance of 388\\(\\pm 5\\,\\)pc, the Orion Nebula is the nearest high-mass star formation region. OMC-1 or Orion A is located behind an H II region ionized by O-B stars from the Trapezium cluster. OMC-1 consists of two principal clumps, the northern Becklin– Neugebauer–Kleinmann–Low (BN-KL) clump and the southern Orion S clump. BN-KL hosts an extremely explosive molecular outflow with a wide opening angle and multiple ejecta.\n\n4.1 Orion BN-KL: \\(p-T_{\\rm dust}\\) relations for single wavelengths\nWe use thermal dust polarization data observed toward the Orion BN-KL by SOFIA/HAWC+ at 89, 154 and 214\\(\\,\\mu\\)m and JCMT/POL-2 at 850\\(\\,\\mu\\)m. Figure 3 showed that DustPOL-py could reproduce observational trends of \\(p(\\%)-T_{\\rm dust}\\).\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ and JCMT/POL-2 observations, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n4.2 OMC-1: pixel-to-pixel at a single wavelength\n\n\n\nFigure 3: DustPOL-py vs. SOFIA/HAWC+ observations at 214\\(\\,\\mu\\)m, led by Dr. Le N. Tram. For more details, please have a look at this article\n\n\n\n\n4.3 OMC-1: polarization spectrum\n\n \n\nFigure 3: DustPOL-py vs. polarisation spectrum (SOFIA/HAWC+ and JCMT/POL-2 observations), led by Dr. Le N. Tram. Different panels are for different line of sights shown on the left figure. For more details, please have a look at this article"
  },
  {
    "objectID": "index.html#dustpol-py---numerical-modelling---v1.6",
    "href": "index.html#dustpol-py---numerical-modelling---v1.6",
    "title": "DustPOL-py: a numerical modeling for linear dust polarization",
    "section": "",
    "text": "– This numerical modelling calculates the multi-wavelength polarization degree of absorption and thermal dust emission based on Radiative Torque alignment (RAT-A), Magnetically enhanced RAT (MRAT) and Radiative Torque Disruption (RAT-D).\n– The routine will save the output files (wavelength and degree of polarization) for further analysis. A built-in routine for analysis is also provided.\n– For a quick look and investigation, please use a web-interface GUI: https://dustpol-py.streamlit.app\n– The high-performance-computation techniques are embedded."
  }
]